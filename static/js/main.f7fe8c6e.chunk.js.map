{"version":3,"sources":["ui/redux/constants/constants.ts","reportWebVitals.ts","ui/components/Input/Input.tsx","server/api.ts","ui/redux/actions/login-actions.ts","ui/components/Input/ValidateInput.tsx","common/WithSocial.tsx","ui/redux/reducers/registration/registration-reducer.ts","ui/redux/reducers/registration/login-reducer.ts","ui/redux/store/store.ts","ui/screens/Login/Login.tsx","ui/redux/thunk/login/login-thunk.ts","ui/components/Nav/Navigation.tsx","ui/redux/actions/regisration-actions.ts","ui/redux/thunk/registration/registration-thunk.ts","ui/screens/Registration/Registration.tsx","ui/screens/ResetPassword/ResetPassword.tsx","ui/screens/ForgotPassword/ForgotPassoword.tsx","ui/screens/HomePage/HomePage.tsx","ui/routing/Routing.tsx","index.tsx"],"names":["ActionTypes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Input","props","onChange","event","setValue","target","value","type","placeholder","instance","axios","create","withCredentials","baseURL","registerAPI","regData","post","loginAPI","loginData","res","data","response","console","log","login","user","isAuth","LOGIN","payload","handlePasswordChange","setPassword","setPasswordError","e","currentTarget","passwordRegex","RegExp","match","handleEmailChange","setEmail","setEmailError","emailRegex","ValidateInput","funcName","required","name","id","error","htmlFor","className","role","WithSocial","href","aria-hidden","fill","viewBox","fillRule","d","clipRule","initialState","status","isRegistration","rootReducer","combineReducers","registration","state","action","USER_REGISTER","USER_REGISTER_ERROR","USER_REGISTER_STATUS","store","createStore","applyMiddleware","thunk","window","__store__","useTypedSelector","useSelector","Login","useState","email","password","rememberMe","setRememberMe","emailError","passwordError","resData","dispatch","useDispatch","to","onChangePassword","onChangeEmail","onClick","a","undefined","localStorage","setItem","token","loginTC","PATH","userRegisterStatus","userRegistrationTC","catch","err","in","Registration","checked","ResetPassword","history","confirmPassword","setConfirmPassword","src","alt","method","autoComplete","ForgotPassword","setError","success","setSuccess","forgotPasswordHandler","preventDefault","config","header","setTimeout","onSubmit","HomePage","useEffect","getItem","style","maxWidth","margin","avatar","Routing","exact","path","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7fe8c6e.chunk.js","sourcesContent":["export enum ActionTypes  {\r\n    USER_REGISTER = 'REGISTRATION/USER_REGISTER',\r\n    USER_REGISTER_ERROR = 'REGISTRATION/USER_REGISTER_ERROR',\r\n    USER_REGISTER_STATUS = 'REGISTRATION/USER_REGISTER_STATUS',\r\n   // SET_USERS = 'SET_USERS',\r\n\r\n    SET_USER = \"SET_USER\",\r\n    LOGOUT = \"LOGOUT\",\r\n    LOGIN= \"LOGIN\"\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\n\r\nconst Input = (props:any) => {\r\n    return (\r\n        <input onChange={(event)=> props.setValue(event.target.value)}\r\n               value={props.value}\r\n               type={props.type}\r\n               placeholder={props.placeholder}\r\n               {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Input;","import axios from \"axios\";\r\nimport {RegistrationRequestType, RegistrationResponseType} from \"../ui/redux/thunk/registration/registration-thunk\";\r\nimport {LoginRequestType, LoginResponseType} from \"../ui/redux/thunk/login/login-thunk\";\r\nimport {setUser} from \"../ui/redux/actions/regisration-actions\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n});\r\n\r\nexport const registerAPI = {\r\n    registerUsers(regData: RegistrationRequestType) {\r\n        return instance.post<RegistrationResponseType>(`auth/register`, {...regData})\r\n    }\r\n};\r\n\r\n\r\nexport const loginAPI = {\r\n    loginUser(loginData: LoginRequestType) {\r\n        return instance.post<LoginResponseType>(`auth/login`, {...loginData}).then((res:any) => res.data)\r\n    },\r\n    me() {\r\n        return instance\r\n            .post<any>(`auth/me`, {})\r\n            .then((response) => {\r\n                console.log(response)\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n// export const auth =  () => {\r\n//     return async (dispatch:any) => {\r\n//         try {\r\n//             const response: any = await instance.post(`/auth/me`, {headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}})\r\n//             dispatch(response)\r\n//             console.log(response)\r\n//             localStorage.setItem('token', response.data.in)\r\n//         }\r\n//         catch (error) {\r\n//             console.log(error)\r\n//         }\r\n//     }\r\n// }","import {ActionTypes,} from \"../constants/constants\";\r\n\r\n\r\nexport const login = (user: userType | undefined, isAuth: boolean) => ({\r\n    type: ActionTypes.LOGIN, payload: {user,isAuth}\r\n} as const)\r\n\r\n\r\nexport type userType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime?: number\r\n    __v?: number\r\n    error?: string\r\n}","import React, {ChangeEvent, ChangeEventHandler} from 'react';\r\n\r\nexport const handlePasswordChange = (\r\n        setPassword: (password: string) => void,\r\n        setPasswordError: (password: string | null) => void\r\n    ) => (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value)\r\n    let passwordRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\n    if (e.currentTarget.value.match(passwordRegex)) {\r\n        setPasswordError(null);\r\n    } else {\r\n        setPasswordError('At least 8 digits, 1 uppercase, 1 number and 1 special character');\r\n    }\r\n}\r\n\r\n\r\nexport const handleEmailChange = (\r\n        setEmail: React.Dispatch<React.SetStateAction<string>>,\r\n        setEmailError: React.Dispatch<React.SetStateAction<string | null>>\r\n    ) => (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n    const sQtext = '[^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]';\r\n    const sText = '[^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]';\r\n    const sAtom = '[^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+';\r\n    const sQuotedPair = '\\\\x5c[\\\\x00-\\\\x7f]';\r\n    const sDomainLiteral = '\\\\x5b(' + sText + '|' + sQuotedPair + ')*\\\\x5d';\r\n    const sQuotedString = '\\\\x22(' + sQtext + '|' + sQuotedPair + ')*\\\\x22';\r\n    const sSubDomain = '(' + sAtom + '|' + sDomainLiteral + ')';\r\n    const sWord = '(' + sAtom + '|' + sQuotedString + ')';\r\n    const sDomain = sSubDomain + '(\\\\x2e' + sSubDomain + ')*';\r\n    const sLocalPart = sWord + '(\\\\x2e' + sWord + ')*';\r\n    const sAddrSpec = sLocalPart + '\\\\x40' + sDomain; // complete RFC822 email address spec\r\n    const sValidEmail = '^' + sAddrSpec + '$'; // as whole string\r\n    const emailRegex = new RegExp(sValidEmail);\r\n\r\n    if (e.currentTarget.value.match(emailRegex)) {\r\n        setEmailError(null);\r\n    } else {\r\n        setEmailError('Valid email required');\r\n    }\r\n}\r\n\r\ntype ValidateInputPropsType = {\r\n    funcName: string\r\n    value: string\r\n    onChange: ChangeEventHandler<HTMLInputElement>\r\n    required: boolean\r\n    type: string\r\n    name: string\r\n    id: string\r\n    error: string | null\r\n}\r\n\r\nexport const ValidateInput = ({funcName, value, onChange, required, type, name, id, error}: ValidateInputPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                {funcName}\r\n            </label>\r\n            <div className=\"mt-1\">\r\n                <input\r\n                    id={id}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    name={name}\r\n                    type={type}\r\n                    required={required}\r\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                />\r\n            </div>\r\n\r\n            {error &&\r\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\"\r\n                 role=\"alert\">\r\n                <strong className=\"font-bold\">{error}</strong>\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// TODO!\r\nexport function collateData() {\r\n\r\n}","import React from 'react';\r\n\r\nconst WithSocial = () => {\r\n    return (\r\n        <div className=\"mt-6\">\r\n            <div className=\"relative\">\r\n                <div className=\"absolute inset-0 flex items-center\">\r\n                    <div className=\"w-full border-t border-gray-300\"/>\r\n                </div>\r\n                <div className=\"relative flex justify-center text-sm\">\r\n                    <span className=\"px-2 bg-white text-gray-500\">Or continue with</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mt-6 grid grid-cols-3 gap-3\">\r\n                <div>\r\n                    <a\r\n                        href=\"https://www.facebook.com\"\r\n                        className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                    >\r\n                        <span className=\"sr-only\">Sign in with Facebook</span>\r\n                        <svg className=\"w-5 h-5\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z\"\r\n                                clipRule=\"evenodd\"\r\n                            />\r\n                        </svg>\r\n                    </a>\r\n                </div>\r\n\r\n                <div>\r\n                    <a\r\n                        href=\"https://twitter.com/\"\r\n                        className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                    >\r\n                        <span className=\"sr-only\">Sign in with Twitter</span>\r\n                        <svg className=\"w-5 h-5\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path\r\n                                d=\"M6.29 18.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0020 3.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.073 4.073 0 01.8 7.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 010 16.407a11.616 11.616 0 006.29 1.84\"/>\r\n                        </svg>\r\n                    </a>\r\n                </div>\r\n\r\n                <div>\r\n                    <a\r\n                        href=\"https://github.com/\"\r\n                        className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                    >\r\n                        <span className=\"sr-only\">Sign in with GitHub</span>\r\n                        <svg className=\"w-5 h-5\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\"\r\n                                clipRule=\"evenodd\"\r\n                            />\r\n                        </svg>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport {\r\n    WithSocial\r\n}","import {userRegister, userRegisterError, userRegisterStatus} from \"../../actions/regisration-actions\";\r\nimport {ActionTypes} from \"../../constants/constants\";\r\n\r\n\r\nconst initialState = {\r\n    status: 'loading' as RequestStatusType,\r\n    error: null as null | string,\r\n    isRegistration: false\r\n};\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.USER_REGISTER:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        case ActionTypes.USER_REGISTER_ERROR:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        case ActionTypes.USER_REGISTER_STATUS:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport type ActionsType = RegisterUserActionType\r\n    | RegisterUserErrorActionType\r\n    | RegisterUserStatusActionType\r\ntype RegisterUserActionType = ReturnType<typeof userRegister>\r\ntype RegisterUserErrorActionType = ReturnType<typeof userRegisterError>\r\ntype RegisterUserStatusActionType = ReturnType<typeof userRegisterStatus>\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type RequestStatusType = 'loading' | 'succeeded' | 'failed'","import {ActionTypes} from \"../../constants/constants\";\r\nimport {login} from \"../../actions/login-actions\";\r\n\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n\r\n};\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport type ActionsType = LoginActionsType\r\ntype LoginActionsType = ReturnType<typeof login>\r\n\r\nexport type InitialStateType = typeof initialState\r\n","import {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {registrationReducer} from \"../reducers/registration/registration-reducer\";\r\nimport {loginReducer} from \"../reducers/registration/login-reducer\";\r\nimport {useSelector, TypedUseSelectorHook} from \"react-redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    registration: registrationReducer,\r\n    login: loginReducer\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootStateType> = useSelector","import React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {loginTC} from \"../../redux/thunk/login/login-thunk\";\r\nimport {handleEmailChange, handlePasswordChange, ValidateInput} from \"../../components/Input/ValidateInput\";\r\nimport {WithSocial} from \"../../../common/WithSocial\";\r\nimport {useTypedSelector} from \"../../redux/store/store\";\r\n\r\nexport const Login:React.FC = (props) => {\r\n    const isAuth = useTypedSelector<boolean>(state => state.login.isAuth)\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const [emailError, setEmailError] = useState<string | null>(null);\r\n    const [passwordError, setPasswordError] = useState<string | null>(null);\r\n    const resData = {email,password,rememberMe}\r\n    const dispatch = useDispatch()\r\n\r\n    if(isAuth === true){\r\n        return <Redirect to=\"/home\"/>\r\n    }\r\n\r\n    const onLoginCallback = () => dispatch(loginTC(resData))\r\n\r\n    let onChangePassword = handlePasswordChange(setPassword, setPasswordError);\r\n    let onChangeEmail = handleEmailChange(setEmail, setEmailError);\r\n    return (\r\n        <div>\r\n            <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n                <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                    <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\r\n                </div>\r\n                <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n                    <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n                        <div className=\"space-y-6\">\r\n                            <div>\r\n                                <div className=\"mt-1\">\r\n                                    <ValidateInput funcName={\"Email address\"}\r\n                                                   value={email}\r\n                                                   onChange={onChangeEmail}\r\n                                                   required={true}\r\n                                                   type={\"email\"}\r\n                                                   name={\"email\"}\r\n                                                   id={\"email\"}\r\n                                                   error={emailError}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"mt-1\">\r\n                                    <ValidateInput funcName={\"Password\"}\r\n                                                   value={password}\r\n                                                   onChange={onChangePassword}\r\n                                                   required={true}\r\n                                                   type=\"password\"\r\n                                                   name=\"password\"\r\n                                                   id=\"password\"\r\n                                                   error={passwordError}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div className=\"flex items-center\">\r\n                                    <Input\r\n                                        value={rememberMe}\r\n                                        setValue={setRememberMe}\r\n                                        id=\"remember_me\"\r\n                                        name=\"remember_me\"\r\n                                        type=\"checkbox\"\r\n                                        className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                                    />\r\n                                    <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                                        Remember me\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                >\r\n                                    Reset Password\r\n                                </button>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    onClick={onLoginCallback}\r\n                                    type=\"submit\"\r\n                                    className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                >\r\n                                    Sign in\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <WithSocial/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {instance, loginAPI} from \"../../../../server/api\";\r\nimport {isAuth, logout, setUser, userRegister, userRegisterError, userRegisterStatus} from \"../../actions/regisration-actions\";\r\nimport {Dispatch} from \"redux\";\r\nimport {login, userType} from \"../../actions/login-actions\";\r\n\r\n\r\nexport const loginTC = ({...loginData}: LoginRequestType) => {\r\n    return async (dispatch: Dispatch<LoginActionsType>) => {\r\n        dispatch(login(undefined, false))\r\n        loginAPI.loginUser({...loginData}).then((res: userType) => {\r\n            dispatch(login(res, true))\r\n            localStorage.setItem('token', res.token)\r\n        })\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = () => async (dispatch: Dispatch<LoginActionsType>) => {\r\n    let data = await loginAPI.me();\r\n    if (localStorage.getItem(\"token\")) {\r\n        dispatch(login(data, false))\r\n    }\r\n};\r\n\r\n// export const authTC = () => {\r\n//     return async (dispatch: Dispatch<LoginActionsType>) => {\r\n//         dispatch(isAuth(false))\r\n//         loginAPI.me().then((res:any) => {\r\n//             try {\r\n//                 console.log(res)\r\n//                 dispatch(setUser(res))\r\n//                 localStorage.setItem('token', res.token)\r\n//             }catch (e:any) {\r\n//                 console.error(e.res.data.error)\r\n//                 localStorage.removeItem('token')\r\n//             }\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport type LoginActionsType = LoginActionType\r\n    | LogOutActionType\r\ntype LoginActionType = ReturnType<typeof setUser>\r\ntype LogOutActionType = ReturnType<typeof logout>\r\nexport type LoginRequestType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type RequestLoginStatusType = 'loading' | 'succeeded' | 'failed'\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}","/* This example requires Tailwind CSS v2.0+ */\r\nimport React, {Fragment} from 'react'\r\n\r\nimport {Disclosure, Menu, Transition} from '@headlessui/react'\r\nimport {BellIcon, MenuIcon, XIcon} from '@heroicons/react/outline'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nfunction classNames(...classes: string[]) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    RESET: \"/forgotpassword\",\r\n    REGISTER: \"/register\",\r\n    HOME: \"/home\"\r\n}\r\n\r\n\r\n\r\nexport function Navigation() {\r\n\r\n\r\n    // const isAuth = useSelector((state:any) => state.authorization.isAuth)\r\n    // const dispatch = useDispatch()\r\n\r\n    return (\r\n            <Disclosure as=\"nav\" className=\"bg-white shadow\">\r\n                {({open}) => (\r\n                    <>\r\n                        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                            <div className=\"flex justify-between h-16\">\r\n                                <div className=\"flex\">\r\n                                    <div className=\"flex-shrink-0 flex items-center\">\r\n                                        <img\r\n                                            className=\"block lg:hidden h-8 w-auto\"\r\n                                            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n                                            alt=\"Workflow\"\r\n                                        />\r\n                                        <img\r\n                                            className=\"hidden lg:block h-8 w-auto\"\r\n                                            src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-600-mark-gray-800-text.svg\"\r\n                                            alt=\"Workflow\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"hidden sm:ml-6 sm:flex sm:space-x-8\">\r\n                                        {/* Current: \"border-indigo-500 text-gray-900\", Default: \"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700\" */}\r\n                                        <NavLink\r\n                                            className=\"border-indigo-500 text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                            to={PATH.HOME}>\r\n                                            Home\r\n                                        </NavLink>\r\n                                        <NavLink\r\n                                            className=\"border-indigo-500 text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                            to={PATH.LOGIN}>\r\n                                            Login\r\n                                        </NavLink>\r\n                                        <NavLink\r\n                                            className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                            to={PATH.REGISTER}>\r\n                                            Registration\r\n                                        </NavLink>\r\n                                        <NavLink\r\n                                            className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                            to={PATH.RESET}>\r\n                                            Reset Password\r\n                                        </NavLink>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"hidden sm:ml-6 sm:flex sm:items-center\">\r\n                                    <button\r\n                                        className=\"bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                                        <span className=\"sr-only\">View notifications</span>\r\n                                        <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\r\n                                    </button>\r\n\r\n                                    {/* Profile dropdown */}\r\n                                    <Menu as=\"div\" className=\"ml-3 relative\">\r\n                                        {({open}) => (\r\n                                            <>\r\n                                                <div>\r\n                                                    <Menu.Button\r\n                                                        className=\"bg-white rounded-full flex text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                                                        <span className=\"sr-only\">Open user menu</span>\r\n                                                        <img\r\n                                                            className=\"h-8 w-8 rounded-full\"\r\n                                                            src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\r\n                                                            alt=\"\"\r\n                                                        />\r\n                                                    </Menu.Button>\r\n                                                </div>\r\n                                                <Transition\r\n                                                    show={open}\r\n                                                    as={Fragment}\r\n                                                    enter=\"transition ease-out duration-200\"\r\n                                                    enterFrom=\"transform opacity-0 scale-95\"\r\n                                                    enterTo=\"transform opacity-100 scale-100\"\r\n                                                    leave=\"transition ease-in duration-75\"\r\n                                                    leaveFrom=\"transform opacity-100 scale-100\"\r\n                                                    leaveTo=\"transform opacity-0 scale-95\"\r\n                                                >\r\n                                                    <Menu.Items\r\n                                                        static\r\n                                                        className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\"\r\n                                                    >\r\n                                                        <Menu.Item>\r\n                                                            {({active}) => (\r\n                                                                <a\r\n                                                                    href=\"#\"\r\n                                                                    className={classNames(\r\n                                                                        active ? 'bg-gray-100' : '',\r\n                                                                        'block px-4 py-2 text-sm text-gray-700'\r\n                                                                    )}\r\n                                                                >\r\n                                                                    Your Profile\r\n                                                                </a>\r\n                                                            )}\r\n                                                        </Menu.Item>\r\n                                                        <Menu.Item>\r\n                                                            {({active}) => (\r\n                                                                <a\r\n                                                                    href=\"#\"\r\n                                                                    className={classNames(\r\n                                                                        active ? 'bg-gray-100' : '',\r\n                                                                        'block px-4 py-2 text-sm text-gray-700'\r\n                                                                    )}\r\n                                                                >\r\n                                                                    Settings\r\n                                                                </a>\r\n                                                            )}\r\n                                                        </Menu.Item>\r\n                                                        <Menu.Item>\r\n                                                            {({active}) => (\r\n                                                                <a\r\n                                                                    href=\"#\"\r\n                                                                    className={classNames(\r\n                                                                        active ? 'bg-gray-100' : '',\r\n                                                                        'block px-4 py-2 text-sm text-gray-700'\r\n                                                                    )}\r\n                                                                >\r\n                                                                    Sign out\r\n                                                                </a>\r\n                                                            )}\r\n                                                        </Menu.Item>\r\n                                                    </Menu.Items>\r\n                                                </Transition>\r\n                                            </>\r\n                                        )}\r\n                                    </Menu>\r\n                                </div>\r\n                                <div className=\"-mr-2 flex items-center sm:hidden\">\r\n                                    {/* Mobile menu button */}\r\n                                    <Disclosure.Button\r\n                                        className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\r\n                                        <span className=\"sr-only\">Open main menu</span>\r\n                                        {open ? (\r\n                                            <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\"/>\r\n                                        ) : (\r\n                                            <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\"/>\r\n                                        )}\r\n                                    </Disclosure.Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Disclosure.Panel className=\"sm:hidden\">\r\n                            <div className=\"pt-2 pb-3 space-y-1\">\r\n                                {/* Current: \"bg-indigo-50 border-indigo-500 text-indigo-700\", Default: \"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700\" */}\r\n                                <a\r\n                                    href=\"#\"\r\n                                    className=\"bg-indigo-50 border-indigo-500 text-indigo-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\"\r\n                                >\r\n                                    Dashboard\r\n                                </a>\r\n                                <a\r\n                                    href=\"#\"\r\n                                    className=\"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\"\r\n                                >\r\n                                    Team\r\n                                </a>\r\n                                <a\r\n                                    href=\"#\"\r\n                                    className=\"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\"\r\n                                >\r\n                                    Projects\r\n                                </a>\r\n                                <a\r\n                                    href=\"#\"\r\n                                    className=\"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\"\r\n                                >\r\n                                    Calendar\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"pt-4 pb-3 border-t border-gray-200\">\r\n                                <div className=\"flex items-center px-4\">\r\n                                    <div className=\"flex-shrink-0\">\r\n                                        <img\r\n                                            className=\"h-10 w-10 rounded-full\"\r\n                                            src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"ml-3\">\r\n                                        <div className=\"text-base font-medium text-gray-800\">Tom Cook</div>\r\n                                        <div className=\"text-sm font-medium text-gray-500\">tom@example.com</div>\r\n                                    </div>\r\n                                    <button\r\n                                        className=\"ml-auto flex-shrink-0 bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                                        <span className=\"sr-only\">View notifications</span>\r\n                                        <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"mt-3 space-y-1\">\r\n                                    <a\r\n                                        href=\"#\"\r\n                                        className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100\"\r\n                                    >\r\n                                        Your Profile\r\n                                    </a>\r\n                                    <a\r\n                                        href=\"#\"\r\n                                        className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100\"\r\n                                    >\r\n                                        Settings\r\n                                    </a>\r\n                                    <a\r\n                                        href=\"#\"\r\n                                        className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100\"\r\n                                    >\r\n                                        Sign out\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </Disclosure.Panel>\r\n                    </>\r\n                )}\r\n            </Disclosure>\r\n    )\r\n}\r\n","import {ActionTypes, } from \"../constants/constants\";\r\nimport {RequestStatusType} from \"../reducers/registration/registration-reducer\";\r\n\r\n\r\n// export function requestUsersAction(users:any) {\r\n//     return {\r\n//         type: ActionTypes.SET_USERS,\r\n//         users\r\n//     };\r\n// }\r\n\r\nexport const userRegister = ( isRegistration: boolean) => ({\r\n        type: ActionTypes.USER_REGISTER, payload: {isRegistration} } as const )\r\n\r\nexport const userRegisterError = (error: string) => ({\r\n    type: ActionTypes.USER_REGISTER_ERROR, payload: {error} } as const )\r\n\r\nexport const userRegisterStatus = (status: RequestStatusType) => ({\r\n    type: ActionTypes.USER_REGISTER_STATUS, payload: {status} } as const )\r\n\r\n// currentUser: action.payload,\r\n// isAuth: true\r\n\r\nexport const setUser = (user:any) => ({type: ActionTypes.SET_USER, payload: {user}})\r\nexport const isAuth = (isAuth: boolean) =>  ({type: ActionTypes.SET_USER, payload: {isAuth}})\r\n\r\nexport const logout = () => ({type: ActionTypes.LOGOUT})","import {registerAPI} from \"../../../../server/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionsType} from \"../../reducers/registration/registration-reducer\";\r\nimport {userRegister, userRegisterError, userRegisterStatus} from \"../../actions/regisration-actions\";\r\n\r\nexport const userRegistrationTC = (regData: RegistrationRequestType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(userRegisterStatus(\"loading\"))\r\n    return registerAPI.registerUsers({...regData})\r\n        .then((res) => {\r\n            console.log(res)\r\n            dispatch(userRegister(true))\r\n            dispatch(userRegisterStatus(\"succeeded\"))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(userRegisterStatus(\"loading\"))\r\n            if (err.response.data.in === \"createUser\") {\r\n                dispatch(userRegisterStatus(\"failed\"))\r\n                dispatch(userRegisterError(err.response.data.error))\r\n            }\r\n        })\r\n}\r\n\r\n\r\nexport type RegistrationRequestType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type RegistrationResponseType = {\r\n    addedUser: {\r\n        _id: string\r\n        email: string\r\n        name: string\r\n        avatar?: string\r\n        publicCardPacksCount: number\r\n        created: Date\r\n        updated: Date\r\n        isAdmin: boolean\r\n        verified: boolean\r\n        rememberMe: boolean\r\n        error?: string\r\n    }\r\n}\r\n\r\nexport type RegistrationUserErrorType = {\r\n    response: {\r\n        data: {\r\n            emailRegExp: {}\r\n            error: string\r\n            in: string\r\n            isEmailValid: boolean\r\n            isPassValid: boolean\r\n            passwordRegExp: string\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType, useTypedSelector} from \"../../redux/store/store\";\r\nimport {RequestStatusType} from \"../../redux/reducers/registration/registration-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from '../../components/Nav/Navigation';\r\nimport {userRegistrationTC} from \"../../redux/thunk/registration/registration-thunk\";\r\nimport {WithSocial} from '../../../common/WithSocial';\r\nimport {handleEmailChange, handlePasswordChange, ValidateInput} from \"../../components/Input/ValidateInput\";\r\n\r\n\r\nexport default function Registration() {\r\n\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const [passwordError, setPasswordError] = useState<string | null>(null);\r\n    const [emailError, setEmailError] = useState<string | null>(null);\r\n    const isRegistration = useTypedSelector<boolean>(state => state.registration.isRegistration)\r\n    const status = useTypedSelector<RequestStatusType>(state => state.registration.status)\r\n    const dispatch = useDispatch();\r\n    const onRegistrationCallback = () => {\r\n        dispatch(userRegistrationTC({email, password, rememberMe}))\r\n    }\r\n    if (isRegistration) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    let onChange = handleEmailChange(setEmail, setEmailError);\r\n    let onRememberMeHandler = () => setRememberMe(true);\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Create your account</h2>\r\n            </div>\r\n            <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n                    <ValidateInput funcName={\"Email address\"}\r\n                                   value={email}\r\n                                   onChange={onChange}\r\n                                   required={true}\r\n                                   type={\"email\"}\r\n                                   name={\"email\"}\r\n                                   id={\"email\"}\r\n                                   error={emailError}\r\n                    />\r\n                    <ValidateInput funcName={\"Password\"}\r\n                                   value={password}\r\n                                   onChange={handlePasswordChange(setPassword, setPasswordError)}\r\n                                   required={true}\r\n                                   type=\"password\"\r\n                                   name=\"password\"\r\n                                   id=\"password\"\r\n                                   error={passwordError}/>\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center\">\r\n                            <input\r\n                                id=\"remember_me\"\r\n                                name=\"remember_me\"\r\n                                type=\"checkbox\"\r\n                                checked={rememberMe}\r\n                                onClick={onRememberMeHandler}\r\n                                className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                            />\r\n                            <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                                Remember me\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"text-sm\">\r\n                            <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n                                Forgot your password?\r\n                            </a>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                            // disabled={status === \"loading\"}\r\n                            onClick={onRegistrationCallback}\r\n                        >\r\n                            Sign up\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <WithSocial/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {WithSocial} from \"../../../common/WithSocial\";\r\n\r\nexport function ResetPassword({ history, match }:any) {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n\r\n    const resetPasswordHandler = async (e:any) => {\r\n        e.preventDefault();\r\n\r\n        const config:any = {\r\n            header: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        if (password !== confirmPassword) {\r\n            setPassword(\"\");\r\n            setConfirmPassword(\"\");\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n            return setError(\"Passwords don't match\");\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.put(\r\n                `https://cards-nya-back.herokuapp.com/1.0/api/passwordreset/${match.params.token}`,\r\n                {\r\n                    password,\r\n                },\r\n                config\r\n            );\r\n\r\n            console.log(data);\r\n            setSuccess(data.data);\r\n        } catch (error) {\r\n            setError(error.response.data.error);\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <img\r\n                    className=\"mx-auto h-12 w-auto\"\r\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n                    alt=\"Workflow\"\r\n                />\r\n                <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Reset your password</h2>\r\n            </div>\r\n\r\n            <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n                    <form className=\"space-y-6\" action=\"#\" method=\"POST\">\r\n\r\n                        <div>\r\n                            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Password\r\n                            </label>\r\n                            <div className=\"mt-1\">\r\n                                <input\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    required\r\n                                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div>\r\n                            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Confirm Password\r\n                            </label>\r\n                            <div className=\"mt-1\">\r\n                                <input\r\n                                    id=\"confirmpassword\"\r\n                                    placeholder=\"Confirm new password\"\r\n                                    name=\"confirmpassword\"\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    value={confirmPassword}\r\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                    required\r\n                                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                            >\r\n                                Sign in\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n\r\n                  <WithSocial/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport function ForgotPassword() {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n\r\n    const forgotPasswordHandler = async (e:any) => {\r\n        e.preventDefault();\r\n\r\n        const config:any = {\r\n            method: \"POST\",\r\n            header: {\r\n                \"Accept\":\"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        try {\r\n            const { data } = await axios.post(\r\n                \"https://cards-nya-back.herokuapp.com/1.0/forgotpassword\",\r\n                { email },\r\n                config\r\n            );\r\n\r\n            setSuccess(data.data);\r\n        } catch (error) {\r\n            setError(error.response.data.error);\r\n            setEmail(\"\");\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <img\r\n                    className=\"mx-auto h-12 w-auto\"\r\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n                    alt=\"Workflow\"\r\n                />\r\n                <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Forgot Password</h2>\r\n            </div>\r\n\r\n            <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n                    <form className=\"space-y-6\"  onSubmit={forgotPasswordHandler}>\r\n                        <div>\r\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Email address\r\n                            </label>\r\n                            {error && <span className=\"error-message\">{error}</span>}\r\n                            {success && <span className=\"success-message\">{success}</span>}\r\n                            <div className=\"mt-1\">\r\n                                <input\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    required\r\n                                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                            >\r\n                                Send Email\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {Navigation} from \"../../components/Nav/Navigation\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginAPI} from \"../../../server/api\";\r\nimport {setAuthUserData} from \"../../redux/thunk/login/login-thunk\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport const HomePage = (props: any) => {\r\n\r\n\r\n    const user = useSelector((state: any) => state.login.user)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(!user){\r\n            dispatch(setAuthUserData())\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{maxWidth: \"80%\", margin: \"auto\"}}>\r\n            <img src={user?.avatar} alt=\"\"/>\r\n            <p>{user?.email}</p>\r\n            <p>{user?.name}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {BrowserRouter, HashRouter, Route, Switch} from 'react-router-dom';\r\nimport {Login} from '../screens/Login/Login';\r\nimport Registration from '../screens/Registration/Registration';\r\nimport {PATH} from \"../components/Nav/Navigation\";\r\nimport {ResetPassword} from \"../screens/ResetPassword/ResetPassword\";\r\nimport {ForgotPassword} from \"../screens/ForgotPassword/ForgotPassoword\";\r\n\r\nimport {HomePage} from \"../screens/HomePage/HomePage\";\r\n\r\nexport default function Routing() {\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <div className=\"app-wrapper-content\">\r\nasdasdasdasdasad\r\n                <HashRouter>\r\n                    <Switch>\r\n                        {/*<PrivateRoute component={HomePage} path={PATH.HOME}/>*/}\r\n                        <Route exact path={PATH.LOGIN} render={() => Login}/>\r\n                        <Route exact path={PATH.HOME} render={() => HomePage}/>\r\n                        <Route exact path={PATH.REGISTER} render={() => Registration}/>\r\n                        <Route\r\n                            exact\r\n                            path=\"/forgotpassword\"\r\n                            // render={() => ForgotPassword}\r\n                            component={ForgotPassword}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            render={() => ResetPassword}\r\n                            path=\"/passwordreset/:token\"\r\n                        />\r\n                    </Switch>\r\n                </HashRouter>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Routing from './ui/routing/Routing';\r\nimport './index.css';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from \"./ui/redux/store/store\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <Routing/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}