{"version":3,"sources":["ui/redux/constants/constants.ts","reportWebVitals.ts","ui/components/Input/Input.tsx","server/api.ts","ui/redux/actions/regisration-actions.ts","ui/redux/actions/login-actions.ts","ui/redux/thunk/login/login-thunk.ts","ui/components/Input/ValidateInput.tsx","common/WithSocial.tsx","ui/redux/reducers/registration/registration-reducer.ts","ui/redux/reducers/registration/login-reducer.ts","ui/redux/reducers/packs/packs-reducer.ts","ui/redux/reducers/cards/cards-reducer.ts","ui/redux/store/store.ts","ui/screens/Login/Login.tsx","ui/components/Nav/Navigation.tsx","ui/redux/thunk/registration/registration-thunk.ts","ui/screens/Registration/Registration.tsx","ui/screens/ResetPassword/ResetPassword.tsx","ui/screens/ForgotPassword/ForgotPassoword.tsx","ui/screens/HomePage/HomePage.tsx","ui/redux/actions/packs-actions.ts","ui/redux/thunk/packs/packs-thunk.ts","ui/components/Pagination/Pagination.tsx","common/Modal.tsx","ui/screens/Packs/Packs.tsx","ui/redux/actions/cards-actions.ts","ui/redux/thunk/cards/cards-thunk.ts","ui/screens/Cards/Cards.tsx","ui/routing/Routing.tsx","index.tsx"],"names":["ActionTypes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Input","props","onChange","event","setValue","target","value","type","placeholder","instance","axios","create","withCredentials","baseURL","registerAPI","regData","post","loginAPI","loginData","res","data","response","console","log","delete","packsAPI","getCards","page","pageCount","get","addPack","name","a","cardsPack","setCard","packData","deleteCards","_id","updateCards","put","CardsAPI","cardsPack_id","createCards","question","answer","card","grade","Math","random","questionImg","userRegisterStatus","status","USER_REGISTER_STATUS","payload","login","user","isAuth","LOGIN","logoutTC","dispatch","undefined","LOGOUT","localStorage","removeItem","handlePasswordChange","setPassword","setPasswordError","e","currentTarget","passwordRegex","RegExp","match","handleEmailChange","setEmail","setEmailError","emailRegex","ValidateInput","funcName","required","id","error","htmlFor","className","role","WithSocial","href","aria-hidden","fill","viewBox","fillRule","d","clipRule","initialState","isRegistration","cardPacks","user_id","path","cardsCount","shots","rating","created","updated","__v","cardPacksTotalCount","maxCardsCount","minCardsCount","loading","cards","cardsTotalCount","filteredCards","packName","maxGrade","minGrade","packUserId","rootReducer","combineReducers","registration","state","action","USER_REGISTER","USER_REGISTER_ERROR","packs","GET_PACKS","LOADING_PACKS","DELETE_PACKS","SET_CURRENT_PAGE","SET_PACKS","ADD_CARDS","SET_CARDS","GET_CARDS_ID","SET_FILTERED_CARDS","SET_CARDS_GRADE","map","c","store","createStore","applyMiddleware","thunk","window","__store__","useTypedSelector","useSelector","Login","useState","email","password","rememberMe","setRememberMe","emailError","passwordError","resData","useDispatch","to","onChangePassword","onChangeEmail","onClick","setItem","token","loginTC","classNames","classes","filter","Boolean","join","PATH","Navigation","as","open","src","alt","Button","show","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","static","Item","active","Panel","userRegistrationTC","catch","err","in","Registration","React","checked","ResetPassword","newPassword","buttonText","values","setValues","useEffect","params","handleChange","clickSubmit","preventDefault","method","url","resetPasswordToken","autoComplete","ForgotPassword","history","alert","message","passwordForgotForm","HomePage","getItem","style","maxWidth","margin","avatar","loadingPacks","getPacksTC","setPacksTC","setPacks","deletePacksTC","deletePacks","updatePacksTC","UPDATE_PACKS","updatePacks","Pagination","arrayOfPages","i","currentPage","numberOfPages","push","PageButton","setPage","length","ModalComponent","setOpen","setQuestion","addCard","setAnswer","Root","onClose","Child","Overlay","Title","autoFocus","ModalPacks","Packs","totalCount","ceil","onc","seOnc","setName","cardId","setId","searchItem","setSearchItem","num","setNum","addPackResolver","newNum","Number","selected","xmlns","scope","val","toLowerCase","includes","onBlur","onDoubleClick","getCardsTC","newCard","createCardsTC","Cards","useParams","cardspackId","updatedQuestion","answerImg","questionVideo","answerVideo","deletedCard","updateCardsTC","Routing","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.111ad42a.chunk.js","sourcesContent":["export enum ActionTypes  {\r\n    USER_REGISTER = 'REGISTRATION/USER_REGISTER',\r\n    USER_REGISTER_ERROR = 'REGISTRATION/USER_REGISTER_ERROR',\r\n    USER_REGISTER_STATUS = 'REGISTRATION/USER_REGISTER_STATUS',\r\n    SET_USER = \"SET_USER\",\r\n    LOGOUT = \"LOGOUT\",\r\n    LOGIN= \"LOGIN\",\r\n    GET_PACKS = \"PACKS/GET_PACKS\",\r\n    SET_PACKS = \"PACKS/SET_PACKS\",\r\n    UPDATE_PACKS = \"PACKS/UPDATE_PACKS\",\r\n    LOADING_PACKS = \"PACKS/LOADING_PACKS\",\r\n    DELETE_PACKS = \"PACKS/DELETE_PACKS\",\r\n    SET_FILTERED_CARDS = \"CARDS/SET_FILTERED_CARDS\",\r\n    ADD_CARDS = \"CARDS/ADD_CARDS\",\r\n    GET_CARDS_ID = \"GET_CARDS_ID\",\r\n\r\n    SET_CARDS_GRADE = \"CARDS/SET_CARDS_GRADE\",\r\n    SET_CARDS = \"CARDS/SET_CARDS\",\r\n    SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\",\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\n\r\nconst Input = (props:any) => {\r\n    return (\r\n        <input onChange={(event)=> props.setValue(event.target.value)}\r\n               value={props.value}\r\n               type={props.type}\r\n               placeholder={props.placeholder}\r\n               {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Input;","import axios from \"axios\";\r\nimport {RegistrationRequestType, RegistrationResponseType} from \"../ui/redux/thunk/registration/registration-thunk\";\r\nimport {LoginRequestType, LoginResponseType} from \"../ui/redux/thunk/login/login-thunk\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n});\r\n\r\n///Обьединить в один инстанс как в тудулисте\r\n\r\nexport const registerAPI = {\r\n    registerUsers(regData: RegistrationRequestType) {\r\n        return instance.post<RegistrationResponseType>(`auth/register`, {...regData})\r\n    }\r\n};\r\nexport const loginAPI = {\r\n    loginUser(loginData: LoginRequestType) {\r\n        return instance.post<LoginResponseType>(`auth/login`, {...loginData}).then((res: any) => res.data)\r\n    },\r\n    me() {\r\n        return instance\r\n            .post<any>(`auth/me`, {})\r\n            .then((response) => {\r\n                console.log(response)\r\n                return response.data;\r\n            });\r\n    },\r\n    meDelete() {\r\n        return instance\r\n            .delete<any>(`auth/me`, {})\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport const packsAPI = {\r\n    // async getCards(packUser_id: string) {\r\n    async getCards(page: number | undefined, pageCount: number | undefined) {\r\n        console.log(pageCount)\r\n        const response = await instance.get<IResponsePacksType>(\r\n            `/cards/pack?`\r\n            + `pageCount=${pageCount}`\r\n            + `&page=${page}`\r\n            // + (packUser_id ? `&user_id=${packUser_id}` : \"\")\r\n            // + `&packName=o`\r\n            // + `&min=2`\r\n            // + `&max=${pageCount}`\r\n            // + `&sortPacks=0updated`\r\n        );\r\n        return response.data;\r\n    },\r\n    addPack: async (name: string) => {\r\n        const response = await instance.post<any>(\"/cards/pack\", {\r\n            cardsPack: {\r\n                name: name,\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    },\r\n    setCard(packData: ICardsPack) {\r\n        return instance.post<ICardsPack>(`cards/pack`, {...packData}).then((response) => {\r\n            return response.data\r\n        })\r\n    },\r\n    deleteCards(_id: string) {\r\n        return instance.delete(`cards/pack/?id=${_id}`)\r\n    },\r\n    updateCards(_id: string, name: string) {\r\n        return instance.put(`cards/pack`, {cardsPack: {_id, name}})\r\n    }\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards() {\r\n        return instance.get<IResponsePacksType>(`cards/pack`).then((response) => {\r\n            return response.data\r\n        })\r\n    },\r\n    setCard(packData: ICardsPack) {\r\n        return instance.post<ICardsPack>(`cards/pack`, {...packData}).then((response) => {\r\n            return response.data\r\n        })\r\n    },\r\n    deleteCards(_id: string) {\r\n        return instance.delete(`cards/pack/?id=${_id}`)\r\n    },\r\n    updateCards(_id: string, name: string) {\r\n        return instance.put(`cards/pack`, {cardsPack: {_id, name}})\r\n    }\r\n}\r\n\r\n\r\ntype deckCoverType = \"url\" | \"base64\"\r\n\r\nexport interface ICardsPack {\r\n    name: string // если не отправить будет таким\r\n    path: string // если не отправить будет такой\r\n    grade: number // не обязателен\r\n    shots: number // не обязателен\r\n    rating: number // не обязателен\r\n    deckCover: deckCoverType // не обязателен\r\n    private: boolean // если не отправить будет такой\r\n    type: string // если не отправить будет таким\r\n}\r\n\r\n\r\nexport type CardPacks = [\r\n    {\r\n        _id: string\r\n        user_id: string\r\n        name: string\r\n        path: string\r\n        cardsCount: number\r\n        grade: number\r\n        shots: number\r\n        rating: number\r\n        type: string\r\n        created: string\r\n        updated: string\r\n        __v: number\r\n    },\r\n];\r\n\r\nexport interface IResponsePacksType {\r\n    cardPacks: CardPacks\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n    loading: boolean\r\n}\r\n\r\n\r\nexport const CardsAPI = {\r\n    async getCards(cardsPack_id: string) {\r\n        const response = await instance.get<getCardsResponseType>(`/cards/card?`\r\n            + `cardsPack_id=${cardsPack_id}`\r\n            + \"&pageCount=1000\"\r\n            // + \"&cardQuestion=ne\"\r\n            // + \"&min=2\"\r\n            // + \"&max=3\"\r\n        )\r\n        return response\r\n    },\r\n    // createCards(cardsPack: CardsType,cardsPack_id: string) {\r\n    //     return instance.post(`cards/card/`, {...cardsPack, cardsPack_id: cardsPack.cardsPack_id})\r\n    //\r\n    // },\r\n    createCards: async (cardsPack_id: string,question: string,answer: string) => {\r\n        const response = await instance.post<any>(\"/cards/card\", {\r\n            card: {\r\n                cardsPack_id,\r\n                answer: answer,\r\n                question: question,\r\n                grade: Math.random() * 5,\r\n                questionImg: \"some img\",\r\n            },\r\n        });\r\n\r\n        return response.data;\r\n    },\r\n    deleteCards(cardsPack_id: string) {\r\n        return instance.delete<deleteCardsResponseType>(`cards/card/?id=${cardsPack_id}`)\r\n    },\r\n    updateCards(card: CardsType) {\r\n        return instance.put<updatedCardResponseType>(`cards/card`, {card})\r\n    }\r\n}\r\n\r\ntype getCardsResponseType = {\r\n    cards: CardsType[],\r\n    page: number,\r\n    pageCount: number,\r\n    cardsTotalCount: number,\r\n    packUserId: string,\r\n}\r\n\r\ntype deleteCardsResponseType = {\r\n    deletedCard: {\r\n        cardsPack_id: string\r\n    }\r\n}\r\n\r\nexport type CardsType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\ntype updatedCardResponseType = {\r\n    card: {\r\n        cardsPack_id: string\r\n    }\r\n}\r\n","import {ActionTypes, } from \"../constants/constants\";\r\nimport {RequestStatusType} from \"../reducers/registration/registration-reducer\";\r\n\r\n\r\n// export function requestUsersAction(users:any) {\r\n//     return {\r\n//         type: ActionTypes.SET_USERS,\r\n//         users\r\n//     };\r\n// }\r\n\r\nexport const userRegister = ( isRegistration: boolean) => ({\r\n        type: ActionTypes.USER_REGISTER, payload: {isRegistration} } as const )\r\n\r\nexport const userRegisterError = (error: string) => ({\r\n    type: ActionTypes.USER_REGISTER_ERROR, payload: {error} } as const )\r\n\r\nexport const userRegisterStatus = (status: RequestStatusType) => ({\r\n    type: ActionTypes.USER_REGISTER_STATUS, payload: {status} } as const )\r\n\r\n// currentUser: action.payload,\r\n// isAuth: true\r\n\r\nexport const setUser = (user:any) => ({type: ActionTypes.SET_USER, payload: {user}})\r\nexport const isAuth = (isAuth: boolean) =>  ({type: ActionTypes.SET_USER, payload: {isAuth}})\r\n\r\nexport const logout = () => ({type: ActionTypes.LOGOUT})","import {ActionTypes,} from \"../constants/constants\";\r\n\r\n\r\nexport const login = (user: userType | undefined, isAuth: boolean) => ({\r\n    type: ActionTypes.LOGIN, payload: {user,isAuth}\r\n} as const)\r\n\r\n\r\n\r\n\r\nexport type userType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime?: number\r\n    __v?: number\r\n    error?: string\r\n}","import {loginAPI} from \"../../../../server/api\";\r\nimport {logout, setUser} from \"../../actions/regisration-actions\";\r\nimport {Dispatch} from \"redux\";\r\nimport {login, userType} from \"../../actions/login-actions\";\r\n\r\n\r\nexport const loginTC = ({...loginData}: LoginRequestType) => {\r\n    return async (dispatch: Dispatch<LoginActionsType>) => {\r\n        dispatch(login(undefined, false))\r\n        loginAPI.loginUser({...loginData}).then((res: userType) => {\r\n            dispatch(login(res, true))\r\n            localStorage.setItem('token', res.token)\r\n        })\r\n    }\r\n}\r\n\r\nexport const logoutTC = () => {\r\n    return async (dispatch: Dispatch<LoginActionsType>) => {\r\n        dispatch(login(undefined, false))\r\n        loginAPI.meDelete().then((res) => {\r\n            console.log(res)\r\n            dispatch(logout())\r\n            localStorage.removeItem('token')\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = () => async (dispatch: Dispatch<LoginActionsType>) => {\r\n    let data = await loginAPI.me();\r\n    if (localStorage.getItem(\"token\")) {\r\n        dispatch(login(data, false))\r\n    }\r\n};\r\n\r\n// export const authTC = () => {\r\n//     return async (dispatch: Dispatch<LoginActionsType>) => {\r\n//         dispatch(isAuth(false))\r\n//         loginAPI.me().then((res:any) => {\r\n//             try {\r\n//                 console.log(res)\r\n//                 dispatch(setUser(res))\r\n//                 localStorage.setItem('token', res.token)\r\n//             }catch (e:any) {\r\n//                 console.error(e.res.data.error)\r\n//                 localStorage.removeItem('token')\r\n//             }\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport type LoginActionsType = LoginActionType\r\n    | LogOutActionType\r\ntype LoginActionType = ReturnType<typeof setUser>\r\ntype LogOutActionType = ReturnType<typeof logout>\r\nexport type LoginRequestType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type RequestLoginStatusType = 'loading' | 'succeeded' | 'failed'\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}","import React, {ChangeEvent, ChangeEventHandler} from 'react';\r\n\r\nexport const handlePasswordChange = (\r\n        setPassword: (password: string) => void,\r\n        setPasswordError: (password: string | null) => void\r\n    ) => (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value)\r\n    let passwordRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\n    if (e.currentTarget.value.match(passwordRegex)) {\r\n        setPasswordError(null);\r\n    } else {\r\n        setPasswordError('At least 8 digits, 1 uppercase, 1 number and 1 special character');\r\n    }\r\n}\r\n\r\n\r\nexport const handleEmailChange = (\r\n        setEmail: React.Dispatch<React.SetStateAction<string>>,\r\n        setEmailError: React.Dispatch<React.SetStateAction<string | null>>\r\n    ) => (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n    const sQtext = '[^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]';\r\n    const sText = '[^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]';\r\n    const sAtom = '[^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+';\r\n    const sQuotedPair = '\\\\x5c[\\\\x00-\\\\x7f]';\r\n    const sDomainLiteral = '\\\\x5b(' + sText + '|' + sQuotedPair + ')*\\\\x5d';\r\n    const sQuotedString = '\\\\x22(' + sQtext + '|' + sQuotedPair + ')*\\\\x22';\r\n    const sSubDomain = '(' + sAtom + '|' + sDomainLiteral + ')';\r\n    const sWord = '(' + sAtom + '|' + sQuotedString + ')';\r\n    const sDomain = sSubDomain + '(\\\\x2e' + sSubDomain + ')*';\r\n    const sLocalPart = sWord + '(\\\\x2e' + sWord + ')*';\r\n    const sAddrSpec = sLocalPart + '\\\\x40' + sDomain; // complete RFC822 email address spec\r\n    const sValidEmail = '^' + sAddrSpec + '$'; // as whole string\r\n    const emailRegex = new RegExp(sValidEmail);\r\n\r\n    if (e.currentTarget.value.match(emailRegex)) {\r\n        setEmailError(null);\r\n    } else {\r\n        setEmailError('Valid email required');\r\n    }\r\n}\r\n\r\ntype ValidateInputPropsType = {\r\n    funcName: string\r\n    value: string\r\n    onChange: ChangeEventHandler<HTMLInputElement>\r\n    required: boolean\r\n    type: string\r\n    name: string\r\n    id: string\r\n    error: string | null\r\n}\r\n\r\nexport const ValidateInput = ({funcName, value, onChange, required, type, name, id, error}: ValidateInputPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                {funcName}\r\n            </label>\r\n            <div className=\"mt-1\">\r\n                <input\r\n                    id={id}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    name={name}\r\n                    type={type}\r\n                    required={required}\r\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                />\r\n            </div>\r\n\r\n            {error &&\r\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\"\r\n                 role=\"alert\">\r\n                <strong className=\"font-bold\">{error}</strong>\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// TODO!\r\nexport function collateData() {\r\n\r\n}","import React from 'react';\r\n\r\nconst WithSocial = () => {\r\n    return (\r\n        <div className=\"mt-6\">\r\n            <div className=\"relative\">\r\n                <div className=\"absolute inset-0 flex items-center\">\r\n                    <div className=\"w-full border-t border-gray-300\"/>\r\n                </div>\r\n                <div className=\"relative flex justify-center text-sm\">\r\n                    <span className=\"px-2 bg-white text-gray-500\">Or continue with</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mt-6 grid grid-cols-3 gap-3\">\r\n                <div>\r\n                    <a\r\n                        href=\"https://www.facebook.com\"\r\n                        className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                    >\r\n                        <span className=\"sr-only\">Sign in with Facebook</span>\r\n                        <svg className=\"w-5 h-5\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z\"\r\n                                clipRule=\"evenodd\"\r\n                            />\r\n                        </svg>\r\n                    </a>\r\n                </div>\r\n\r\n                <div>\r\n                    <a\r\n                        href=\"https://twitter.com/\"\r\n                        className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                    >\r\n                        <span className=\"sr-only\">Sign in with Twitter</span>\r\n                        <svg className=\"w-5 h-5\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path\r\n                                d=\"M6.29 18.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0020 3.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.073 4.073 0 01.8 7.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 010 16.407a11.616 11.616 0 006.29 1.84\"/>\r\n                        </svg>\r\n                    </a>\r\n                </div>\r\n\r\n                <div>\r\n                    <a\r\n                        href=\"https://github.com/\"\r\n                        className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                    >\r\n                        <span className=\"sr-only\">Sign in with GitHub</span>\r\n                        <svg className=\"w-5 h-5\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\"\r\n                                clipRule=\"evenodd\"\r\n                            />\r\n                        </svg>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport {\r\n    WithSocial\r\n}","import {userRegister, userRegisterError, userRegisterStatus} from \"../../actions/regisration-actions\";\r\nimport {ActionTypes} from \"../../constants/constants\";\r\n\r\n\r\nconst initialState = {\r\n    status: 'loading' as RequestStatusType,\r\n    error: null as null | string,\r\n    isRegistration: false\r\n};\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n  //// Собрать все редюсеры в один кейс (будет один пейлоад и стейт :) )\r\n    switch (action.type) {\r\n        case ActionTypes.USER_REGISTER:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        case ActionTypes.USER_REGISTER_ERROR:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        case ActionTypes.USER_REGISTER_STATUS:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport type ActionsType = RegisterUserActionType\r\n    | RegisterUserErrorActionType\r\n    | RegisterUserStatusActionType\r\ntype RegisterUserActionType = ReturnType<typeof userRegister>\r\ntype RegisterUserErrorActionType = ReturnType<typeof userRegisterError>\r\ntype RegisterUserStatusActionType = ReturnType<typeof userRegisterStatus>\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type RequestStatusType = 'loading' | 'succeeded' | 'failed'","import {ActionTypes} from \"../../constants/constants\";\r\nimport {login} from \"../../actions/login-actions\";\r\n\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n};\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport type ActionsType = LoginActionsType\r\ntype LoginActionsType = ReturnType<typeof login>\r\n\r\nexport type InitialStateType = typeof initialState\r\n","import {ActionTypes} from \"../../constants/constants\";\r\nimport {deletePacks, getPacks, loadingPacks, setCurrentPage, setPacks, updatePacks} from \"../../actions/packs-actions\";\r\n\r\n\r\nconst initialState = {\r\n    cardPacks: [\r\n        {\r\n            _id: \"5eb6cef840b7bf1cf0d8122d\",\r\n            user_id: \"5eb543f6bea3ad21480f1ee7\",\r\n            name: \"no Name\",\r\n            path: \"/def\", // папка\r\n            cardsCount: 25,\r\n            grade: 0, // средняя оценка карточек\r\n            shots: 0,// количество попыток\r\n            rating: 0, // лайки\r\n            type: \"pack\",// ещё будет \"folder\" (папка)\r\n            created: \"2020-05-09T15:40:40.339Z\",\r\n            updated: \"2020-05-09T15:40:40.339Z\",\r\n            __v: 0,\r\n        },\r\n    ],\r\n    cardPacksTotalCount: 14, // количество колод\r\n    maxCardsCount: 4,\r\n    minCardsCount: 0,\r\n    page: 1,// выбранная страница\r\n    pageCount: 4, // количество элементов на странице\r\n    loading: false,\r\n}\r\n\r\nexport type PacksActionsType =\r\n    GetActionPacksType\r\n    | LoadingPacksType\r\n    | SetActionPacksType\r\n    | DeletePacksType\r\n    | UpdatePacksType\r\n    | SetCurrentPageType\r\n\r\n\r\ntype GetActionPacksType = ReturnType<typeof getPacks>\r\ntype SetActionPacksType = ReturnType<typeof setPacks>\r\ntype LoadingPacksType = ReturnType<typeof loadingPacks>\r\ntype DeletePacksType = ReturnType<typeof deletePacks>\r\ntype UpdatePacksType = ReturnType<typeof updatePacks>\r\ntype SetCurrentPageType = ReturnType<typeof setCurrentPage>\r\n\r\nexport type InitialPacksStateType = typeof initialState\r\n\r\n\r\nexport default function packsReducer(state = initialState, action: PacksActionsType): InitialPacksStateType {\r\n    //// Собрать все редюсеры в один кейс (будет один пейлоад и стейт :) )\r\n    switch (action.type) {\r\n        case ActionTypes.GET_PACKS:\r\n        case ActionTypes.LOADING_PACKS:\r\n        case ActionTypes.DELETE_PACKS:\r\n        case ActionTypes.SET_CURRENT_PAGE:\r\n        case ActionTypes.SET_PACKS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function createPages(pages: number[] = [], pageCount: number, page: number) {\r\n    if (page > 10) {\r\n        if (page > 5) {\r\n            for (let i = page - 4; i <= page + 5; i++) {\r\n                pages.push(i)\r\n                if (i == pageCount) break\r\n            }\r\n        } else {\r\n            for (let i = 1; i <= 10; i++) {\r\n                pages.push(i)\r\n                if (i == pageCount) break\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = 1; i <= pageCount; i++) {\r\n            pages.push(i)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {ActionTypes} from \"../../constants/constants\";\r\nimport {\r\n    createCards,\r\n    FilteredCardsType,\r\n    GET_CARDS_ID,\r\n    setCards,\r\n    setCardsGrade,\r\n    setFilteredCards\r\n} from \"../../actions/cards-actions\";\r\nimport {CardsType} from \"../../../../server/api\";\r\n\r\n\r\nconst initialState = {\r\n    cards: [] as CardsType[],\r\n    cardsTotalCount: 3,\r\n    filteredCards: {\r\n        packName: \"\",\r\n        maxGrade: 15,\r\n        minGrade:0\r\n    } as FilteredCardsType,\r\n    page: 1,\r\n    pageCount: 4,\r\n    packUserId: \"\",\r\n    loading: false,\r\n    cardsPack_id: \"\"\r\n}\r\n\r\n\r\nexport default function cardsReducer(state = initialState, action: ActionsType): InitialStateType {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_CARDS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n                }\r\n        case ActionTypes.SET_CARDS:\r\n            return {\r\n                    ...state,\r\n                    cards: action.payload.cards\r\n            }\r\n        case ActionTypes.GET_CARDS_ID:\r\n            return {\r\n                ...state,\r\n                cardsPack_id: action.payload.cardsPack_id\r\n            }\r\n        case ActionTypes.SET_FILTERED_CARDS:\r\n            return {\r\n              ...state,\r\n                filteredCards: action.payload.filteredCards\r\n            }\r\n        case ActionTypes.SET_CARDS_GRADE:\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(\r\n                    (c => c._id === action.payload._id\r\n                        ? {...c, grade: action.payload.grade}\r\n                        : c\r\n                    ))\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport type ActionsType =  ReturnType<typeof setCards>\r\n    |  ReturnType<typeof createCards>\r\n    |  ReturnType<typeof setFilteredCards>\r\n    |  ReturnType<typeof setCardsGrade>\r\n    |  ReturnType<typeof GET_CARDS_ID>\r\n\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n","import {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {registrationReducer} from \"../reducers/registration/registration-reducer\";\r\nimport {loginReducer} from \"../reducers/registration/login-reducer\";\r\nimport {useSelector, TypedUseSelectorHook} from \"react-redux\";\r\nimport packsReducer from \"../reducers/packs/packs-reducer\";\r\nimport cardsReducer from \"../reducers/cards/cards-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    registration: registrationReducer,\r\n    login: loginReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootStateType> = useSelector","import React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {loginTC} from \"../../redux/thunk/login/login-thunk\";\r\nimport {handleEmailChange, handlePasswordChange, ValidateInput} from \"../../components/Input/ValidateInput\";\r\nimport {WithSocial} from \"../../../common/WithSocial\";\r\nimport {useTypedSelector} from \"../../redux/store/store\";\r\n\r\nexport const Login:React.FC = (props) => {\r\n    const isAuth = useTypedSelector<boolean>(state => state.login.isAuth)\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const [emailError, setEmailError] = useState<string | null>(null);\r\n    const [passwordError, setPasswordError] = useState<string | null>(null);\r\n    const resData = {email,password,rememberMe}\r\n    const dispatch = useDispatch()\r\n\r\n    if(isAuth){\r\n        return <Redirect to=\"/home\"/>\r\n    }\r\n\r\n    const onLoginCallback = () => dispatch(loginTC(resData))\r\n\r\n    let onChangePassword = handlePasswordChange(setPassword, setPasswordError);\r\n    let onChangeEmail = handleEmailChange(setEmail, setEmailError);\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n                <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                    <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\r\n                </div>\r\n                <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n                    <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n                        <div className=\"space-y-6\">\r\n                            <div>\r\n                                <div className=\"mt-1\">\r\n                                    <ValidateInput funcName={\"Email address\"}\r\n                                                   value={email}\r\n                                                   onChange={onChangeEmail}\r\n                                                   required={true}\r\n                                                   type={\"email\"}\r\n                                                   name={\"email\"}\r\n                                                   id={\"email\"}\r\n                                                   error={emailError}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"mt-1\">\r\n                                    <ValidateInput funcName={\"Password\"}\r\n                                                   value={password}\r\n                                                   onChange={onChangePassword}\r\n                                                   required={true}\r\n                                                   type=\"password\"\r\n                                                   name=\"password\"\r\n                                                   id=\"password\"\r\n                                                   error={passwordError}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div className=\"flex items-center\">\r\n                                    <Input\r\n                                        value={rememberMe}\r\n                                        setValue={setRememberMe}\r\n                                        id=\"remember_me\"\r\n                                        name=\"remember_me\"\r\n                                        type=\"checkbox\"\r\n                                        className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                                    />\r\n                                    <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                                        Remember me\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                >\r\n                                    Reset Password\r\n                                </button>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    onClick={onLoginCallback}\r\n                                    type=\"submit\"\r\n                                    className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                >\r\n                                    Sign in\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <WithSocial/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/* This example requires Tailwind CSS v2.0+ */\r\nimport React, {Fragment} from 'react'\r\n\r\nimport {Disclosure, Menu, Transition} from '@headlessui/react'\r\nimport {BellIcon, MenuIcon, XIcon} from '@heroicons/react/outline'\r\nimport {NavLink, Redirect} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/store/store\";\r\nimport {logout} from \"../../redux/actions/regisration-actions\";\r\nimport {ActionTypes} from \"../../redux/constants/constants\";\r\nimport {logoutTC} from \"../../redux/thunk/login/login-thunk\";\r\n\r\nfunction classNames(...classes: string[]) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    FORGOT: \"/forgotpassword\",\r\n    RESET: \"/set-new-password\",\r\n    PACKS: \"/packs\",\r\n    CARDS: \"/cards/\",\r\n    REGISTER: \"/register\",\r\n    HOME: \"/home\"\r\n}\r\n\r\n\r\n\r\nexport function Navigation() {\r\n    const isAuth = useSelector((state: RootStateType) => state.login.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <Disclosure as=\"nav\" className=\"bg-white shadow\">\r\n            {({open}) => (\r\n                <>\r\n                    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                        <div className=\"flex justify-between h-16\">\r\n                            <div className=\"flex\">\r\n                                <div className=\"flex-shrink-0 flex items-center\">\r\n                                    <img\r\n                                        className=\"block lg:hidden h-8 w-auto\"\r\n                                        src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n                                        alt=\"Workflow\"\r\n                                    />\r\n                                    <img\r\n                                        className=\"hidden lg:block h-8 w-auto\"\r\n                                        src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-600-mark-gray-800-text.svg\"\r\n                                        alt=\"Workflow\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"hidden sm:ml-6 sm:flex sm:space-x-8\">\r\n                                    {/* Current: \"border-indigo-500 text-gray-900\", Default: \"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700\" */}\r\n                                    {isAuth &&\r\n                                    <NavLink\r\n                                        className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                        to={PATH.HOME}>\r\n                                        Home\r\n                                    </NavLink>\r\n                                    }\r\n                                    {isAuth &&\r\n                                    <NavLink\r\n                                        className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                        to={PATH.FORGOT}>\r\n                                        Forgot\r\n                                    </NavLink>\r\n                                    }\r\n                                    {isAuth &&\r\n                                    <NavLink\r\n                                        className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                        to={PATH.PACKS}>\r\n                                        Packs\r\n                                    </NavLink>\r\n                                    }\r\n                                    {/*{isAuth &&*/}\r\n                                    {/*<NavLink*/}\r\n                                    {/*    className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"*/}\r\n                                    {/*    to={PATH.CARDS}>*/}\r\n                                    {/*    Cards*/}\r\n                                    {/*</NavLink>*/}\r\n                                    {/*}*/}\r\n                                    {!isAuth &&\r\n                                    <NavLink\r\n                                        className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                        to={PATH.LOGIN}>\r\n                                        Login\r\n                                    </NavLink>}\r\n                                    {!isAuth &&\r\n                                    <NavLink\r\n                                        className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                        to={PATH.REGISTER}>\r\n                                        Registration\r\n                                    </NavLink>}\r\n                                    {!isAuth &&\r\n                                    <NavLink\r\n                                        className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                        to={PATH.RESET}>\r\n                                        Reset Password\r\n                                    </NavLink>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"hidden sm:ml-6 sm:flex sm:items-center\">\r\n                                <button\r\n                                    className=\"bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                                    <span className=\"sr-only\">View notifications</span>\r\n                                    <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\r\n                                </button>\r\n\r\n                                {/* Profile dropdown */}\r\n                                <Menu as=\"div\" className=\"ml-3 relative\">\r\n                                    {({open}) => (\r\n                                        <>\r\n                                            <div>\r\n                                                <Menu.Button\r\n                                                    className=\"bg-white rounded-full flex text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                                                    <span className=\"sr-only\">Open user menu</span>\r\n                                                    <img\r\n                                                        className=\"h-8 w-8 rounded-full\"\r\n                                                        src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\r\n                                                        alt=\"\"\r\n                                                    />\r\n                                                </Menu.Button>\r\n                                            </div>\r\n                                            <Transition\r\n                                                show={open}\r\n                                                as={Fragment}\r\n                                                enter=\"transition ease-out duration-200\"\r\n                                                enterFrom=\"transform opacity-0 scale-95\"\r\n                                                enterTo=\"transform opacity-100 scale-100\"\r\n                                                leave=\"transition ease-in duration-75\"\r\n                                                leaveFrom=\"transform opacity-100 scale-100\"\r\n                                                leaveTo=\"transform opacity-0 scale-95\"\r\n                                            >\r\n                                                <Menu.Items\r\n                                                    static\r\n                                                    className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\"\r\n                                                >\r\n                                                    <Menu.Item>\r\n                                                        {({active}) => (\r\n                                                            <a\r\n                                                                href=\"#\"\r\n                                                                className={classNames(\r\n                                                                    active ? 'bg-gray-100' : '',\r\n                                                                    'block px-4 py-2 text-sm text-gray-700'\r\n                                                                )}\r\n                                                            >\r\n                                                                Your Profile\r\n                                                            </a>\r\n                                                        )}\r\n                                                    </Menu.Item>\r\n                                                    <Menu.Item>\r\n                                                        {({active}) => (\r\n                                                            <button\r\n                                                                onClick={() => dispatch(logoutTC())}\r\n                                                                className={classNames(\r\n                                                                    active ? 'bg-gray-100' : '',\r\n                                                                    'block px-4 py-2 text-sm text-gray-700'\r\n                                                                )}\r\n                                                            >\r\n                                                                Sign out\r\n                                                            </button>\r\n                                                        )}\r\n                                                    </Menu.Item>\r\n                                                </Menu.Items>\r\n                                            </Transition>\r\n                                        </>\r\n                                    )}\r\n                                </Menu>\r\n                            </div>\r\n                            <div className=\"-mr-2 flex items-center sm:hidden\">\r\n                                {/* Mobile menu button */}\r\n                                <Disclosure.Button\r\n                                    className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\r\n                                    <span className=\"sr-only\">Open main menu</span>\r\n                                    {open ? (\r\n                                        <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\"/>\r\n                                    ) : (\r\n                                        <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\"/>\r\n                                    )}\r\n                                </Disclosure.Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Disclosure.Panel className=\"sm:hidden\">\r\n                        <div className=\"pt-2 pb-3 space-y-1\">\r\n                            {/* Current: \"bg-indigo-50 border-indigo-500 text-indigo-700\", Default: \"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700\" */}\r\n                            <a\r\n                                href=\"#\"\r\n                                className=\"bg-indigo-50 border-indigo-500 text-indigo-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\"\r\n                            >\r\n                                Dashboard\r\n                            </a>\r\n                            <a\r\n                                href=\"#\"\r\n                                className=\"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\"\r\n                            >\r\n                                Team\r\n                            </a>\r\n                            <a\r\n                                href=\"#\"\r\n                                className=\"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\"\r\n                            >\r\n                                Projects\r\n                            </a>\r\n                            <a\r\n                                href=\"#\"\r\n                                className=\"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\"\r\n                            >\r\n                                Calendar\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"pt-4 pb-3 border-t border-gray-200\">\r\n                            <div className=\"flex items-center px-4\">\r\n                                <div className=\"flex-shrink-0\">\r\n                                    <img\r\n                                        className=\"h-10 w-10 rounded-full\"\r\n                                        src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"ml-3\">\r\n                                    <div className=\"text-base font-medium text-gray-800\">Tom Cook</div>\r\n                                    <div className=\"text-sm font-medium text-gray-500\">tom@example.com</div>\r\n                                </div>\r\n                                <button\r\n                                    className=\"ml-auto flex-shrink-0 bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                                    <span className=\"sr-only\">View notifications</span>\r\n                                    <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"mt-3 space-y-1\">\r\n                                <a\r\n                                    href=\"#\"\r\n                                    className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100\"\r\n                                >\r\n                                    Your Profile\r\n                                </a>\r\n                                <button\r\n                                    onClick={() => dispatch(logoutTC())}\r\n                                    className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100\"\r\n                                >\r\n                                    Sign out\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Disclosure.Panel>\r\n                </>\r\n            )}\r\n        </Disclosure>\r\n    )\r\n}\r\n","import {registerAPI} from \"../../../../server/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionsType} from \"../../reducers/registration/registration-reducer\";\r\nimport {userRegister, userRegisterError, userRegisterStatus} from \"../../actions/regisration-actions\";\r\n\r\nexport const userRegistrationTC = (regData: RegistrationRequestType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(userRegisterStatus(\"loading\"))\r\n    return registerAPI.registerUsers({...regData})\r\n        .then((res) => {\r\n            console.log(res)\r\n            dispatch(userRegister(true))\r\n            dispatch(userRegisterStatus(\"succeeded\"))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(userRegisterStatus(\"loading\"))\r\n            if (err.response.data.in === \"createUser\") {\r\n                dispatch(userRegisterStatus(\"failed\"))\r\n                dispatch(userRegisterError(err.response.data.error))\r\n            }\r\n        })\r\n}\r\n\r\n\r\nexport type RegistrationRequestType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type RegistrationResponseType = {\r\n    addedUser: {\r\n        _id: string\r\n        email: string\r\n        name: string\r\n        avatar?: string\r\n        publicCardPacksCount: number\r\n        created: Date\r\n        updated: Date\r\n        isAdmin: boolean\r\n        verified: boolean\r\n        rememberMe: boolean\r\n        error?: string\r\n    }\r\n}\r\n\r\nexport type RegistrationUserErrorType = {\r\n    response: {\r\n        data: {\r\n            emailRegExp: {}\r\n            error: string\r\n            in: string\r\n            isEmailValid: boolean\r\n            isPassValid: boolean\r\n            passwordRegExp: string\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/store/store\";\r\nimport {RequestStatusType} from \"../../redux/reducers/registration/registration-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from '../../components/Nav/Navigation';\r\nimport {userRegistrationTC} from \"../../redux/thunk/registration/registration-thunk\";\r\nimport {WithSocial} from '../../../common/WithSocial';\r\nimport {handleEmailChange, handlePasswordChange, ValidateInput} from \"../../components/Input/ValidateInput\";\r\n\r\n\r\nexport default function Registration() {\r\n\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const [passwordError, setPasswordError] = React.useState<string | null>(null);\r\n    const [emailError, setEmailError] = React.useState<string | null>(null);\r\n\r\n    const isRegistration = useSelector<RootStateType, boolean>(registration => registration.registration.isRegistration)\r\n\r\n\r\n    const status = useSelector<RootStateType, RequestStatusType>(registration => registration.registration.status)\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onRegistrationCallback = () => {\r\n        dispatch(userRegistrationTC({email, password, rememberMe}))\r\n    }\r\n\r\n\r\n    if (isRegistration) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Create your account</h2>\r\n            </div>\r\n            <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n                    <ValidateInput funcName={\"Email address\"} value={email}\r\n                                   onChange={handleEmailChange(setEmail, setEmailError)} required={true}\r\n                                   type={\"email\"} name={\"email\"} id={\"email\"} error={emailError}/>\r\n                    <ValidateInput funcName={\"Password\"} value={password}\r\n                                   onChange={handlePasswordChange(setPassword, setPasswordError)} required={true}\r\n                                   type=\"password\" name=\"password\" id=\"password\" error={passwordError}/>\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center\">\r\n                            <input\r\n                                id=\"remember_me\"\r\n                                name=\"remember_me\"\r\n                                type=\"checkbox\"\r\n                                checked={rememberMe}\r\n                                onClick={() => setRememberMe(true)}\r\n                                className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                            />\r\n                            <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                                Remember me\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"text-sm\">\r\n                            <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n                                Forgot your password?\r\n                            </a>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                            // disabled={status === \"loading\"}\r\n                            onClick={onRegistrationCallback}\r\n                        >\r\n                            Sign up\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <WithSocial/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt from 'jsonwebtoken';\r\nimport {WithSocial} from \"../../../common/WithSocial\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n// export function ResetPassword({ history, match }:any) {\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//     const [error, setError] = useState(\"\");\r\n//     const [success, setSuccess] = useState(\"\");\r\n//\r\n//     const resetPasswordHandler = async (e:any) => {\r\n//         e.preventDefault();\r\n//\r\n//         const config:any = {\r\n//             header: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//             },\r\n//         };\r\n//\r\n//         if (password !== confirmPassword) {\r\n//             setPassword(\"\");\r\n//             setConfirmPassword(\"\");\r\n//             setTimeout(() => {\r\n//                 setError(\"\");\r\n//             }, 5000);\r\n//             return setError(\"Passwords don't match\");\r\n//         }\r\n//\r\n//         try {\r\n//             const { data } = await axios.post(\r\n//                 `https://neko-back.herokuapp.com/2.0/auth/set-new-password/${match.params.token}`,\r\n//                 {\r\n//                     password,\r\n//                 },\r\n//                 config\r\n//             );\r\n//\r\n//             console.log(data);\r\n//             setSuccess(data.data);\r\n//         } catch (error) {\r\n//             setError(error.response.data.error);\r\n//             setTimeout(() => {\r\n//                 setError(\"\");\r\n//             }, 5000);\r\n//         }\r\n//     };\r\n//     return (\r\n//         <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n//             <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n//                 <img\r\n//                     className=\"mx-auto h-12 w-auto\"\r\n//                     src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n//                     alt=\"Workflow\"\r\n//                 />\r\n//                 <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Reset your password</h2>\r\n//             </div>\r\n//\r\n//             <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n//                 <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n//                     <form className=\"space-y-6\" onSubmit={resetPasswordHandler}>\r\n//\r\n//                         <div>\r\n//                             <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n//                                 Password\r\n//                             </label>\r\n//                             <div className=\"mt-1\">\r\n//                                 <input\r\n//                                     id=\"password\"\r\n//                                     name=\"password\"\r\n//                                     type=\"password\"\r\n//                                     autoComplete=\"current-password\"\r\n//                                     value={password}\r\n//                                     onChange={(e) => setPassword(e.target.value)}\r\n//                                     required\r\n//                                     className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                                 />\r\n//                             </div>\r\n//                         </div>\r\n//\r\n//\r\n//                         <div>\r\n//                             <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n//                                 Confirm Password\r\n//                             </label>\r\n//                             <div className=\"mt-1\">\r\n//                                 <input\r\n//                                     id=\"confirmpassword\"\r\n//                                     placeholder=\"Confirm new password\"\r\n//                                     name=\"confirmpassword\"\r\n//                                     type=\"password\"\r\n//                                     autoComplete=\"current-password\"\r\n//                                     value={confirmPassword}\r\n//                                     onChange={(e) => setConfirmPassword(e.target.value)}\r\n//                                     required\r\n//                                     className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                                 />\r\n//                             </div>\r\n//                         </div>\r\n//\r\n//                         <div>\r\n//                             <button\r\n//                                 type=\"submit\"\r\n//                                 className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n//                             >\r\n//                                 Sign in\r\n//                             </button>\r\n//                         </div>\r\n//                     </form>\r\n//\r\n//                   <WithSocial/>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// import 'react-toastify/dist/ReactToastify.min.css';\r\n\r\n\r\nexport const ResetPassword = ({match}: any) => { //props.match from React router DOM\r\n    const [values, setValues] = useState({\r\n        res: {},\r\n        token: '',\r\n        newPassword: '',\r\n        buttonText: 'Reset password'\r\n    })\r\n\r\n    useEffect(() => {\r\n        let token = match.params.token\r\n        console.log(token)\r\n        if (token) {\r\n            setValues({...values, token})\r\n        }\r\n    }, [])\r\n\r\n    const {token, newPassword, buttonText} = values;\r\n\r\n    const handleChange = (event: any) => {\r\n        setValues({...values, newPassword: event.target.value});\r\n    };\r\n    const clickSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        setValues({...values, buttonText: 'Submitting'});\r\n        axios({\r\n            method: 'POST',\r\n            url: `https://neko-back.herokuapp.com/2.0/auth/set-new-password`,\r\n            data: {password: newPassword, resetPasswordToken: token}\r\n        })\r\n            .then(response => {\r\n                console.log('RESET PASSWORD SUCCESS', response);\r\n\r\n                setValues({...values, res: response, buttonText: 'Done'});\r\n                // save the response(user, token) localstorage/cookie\r\n                // alert(response.data.message);\r\n            })\r\n            .catch(error => {\r\n                console.log('FORGOT PASSWORD ERROR', error);\r\n                // alert(error.error);/\r\n                setValues({...values, buttonText: 'Reset password'});\r\n            });\r\n    };\r\n\r\n\r\n    const passwordResetForm = () => (\r\n\r\n        <div>\r\n\r\n            <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n                <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                    <img\r\n                        className=\"mx-auto h-12 w-auto\"\r\n                        src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n                        alt=\"Workflow\"\r\n                    />\r\n                    <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Reset your password</h2>\r\n                </div>\r\n\r\n                <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n                    <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n                        <div className=\"space-y-6\">\r\n\r\n                            <div>\r\n                                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                                    Password\r\n                                </label>\r\n                                <div className=\"mt-1\">\r\n                                    <input\r\n                                        id=\"password\"\r\n                                        placeholder=\"Type new password\"\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                        value={newPassword}\r\n                                        onChange={handleChange}\r\n                                        required\r\n                                        className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    onClick={clickSubmit}\r\n                                    className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                >\r\n                                    {buttonText}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <WithSocial/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"col-d-6 offset-md-3\">\r\n                {passwordResetForm()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;","import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// export function ForgotPassword() {\r\n//\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [error, setError] = useState(\"\");\r\n//     const [success, setSuccess] = useState(\"\");\r\n//\r\n//     const forgotPasswordHandler = async (e:any) => {\r\n//         e.preventDefault();\r\n//\r\n//         const config:any = {\r\n//             method: \"POST\",\r\n//             header: {\r\n//                 \"Accept\":\"application/json\",\r\n//                 \"Content-Type\": \"application/json\",\r\n//             },\r\n//         };\r\n//\r\n//         try {\r\n//             const { data } = await axios.post(\r\n//                 \"https://cards-nya-back.herokuapp.com/1.0/forgotpassword\",\r\n//                 { email },\r\n//                 config\r\n//             );\r\n//\r\n//             setSuccess(data.data);\r\n//         } catch (error) {\r\n//             setError(error.response.data.error);\r\n//             setEmail(\"\");\r\n//             setTimeout(() => {\r\n//                 setError(\"\");\r\n//             }, 5000);\r\n//         }\r\n//     };\r\n//\r\n//\r\n//     return (\r\n//         <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n//             <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n//                 <img\r\n//                     className=\"mx-auto h-12 w-auto\"\r\n//                     src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n//                     alt=\"Workflow\"\r\n//                 />\r\n//                 <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Forgot Password</h2>\r\n//             </div>\r\n//\r\n//             <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n//                 <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n//                     <form className=\"space-y-6\"  onSubmit={forgotPasswordHandler}>\r\n//                         <div>\r\n//                             <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n//                                 Email address\r\n//                             </label>\r\n//                             {error && <span className=\"error-message\">{error}</span>}\r\n//                             {success && <span className=\"success-message\">{success}</span>}\r\n//                             <div className=\"mt-1\">\r\n//                                 <input\r\n//                                     id=\"email\"\r\n//                                     name=\"email\"\r\n//                                     type=\"email\"\r\n//                                     autoComplete=\"email\"\r\n//                                     value={email}\r\n//                                     onChange={(e) => setEmail(e.target.value)}\r\n//                                     required\r\n//                                     className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                                 />\r\n//                             </div>\r\n//                         </div>\r\n//\r\n//                         <div>\r\n//                             <button\r\n//                                 type=\"submit\"\r\n//                                 className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n//                             >\r\n//                                 Send Email\r\n//                             </button>\r\n//                         </div>\r\n//                     </form>\r\n//\r\n//\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport const ForgotPassword = ({history}: any) => {\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        buttonText: 'Send email'\r\n    })\r\n\r\n    const {email, buttonText} = values;\r\n\r\n    const handleChange = (name: any) => (event: any) => {\r\n        // console.log(event.target.value);\r\n        setValues({...values, [name]: event.target.value});\r\n    };\r\n    const clickSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        setValues({...values, buttonText: 'Submitting'});\r\n        axios({\r\n            method: 'POST',\r\n            url: `https://neko-back.herokuapp.com/2.0/auth/forgot`,\r\n            data: {email}\r\n        })\r\n            .then(response => {\r\n                console.log('FORGOT PASSWORD SUCCESS', response);\r\n                // @ts-ignore\r\n                setValues({...values, name: '', email: '', password: '', buttonText: 'Request'});\r\n                // save the response(user, token) localstorage/cookie\r\n                alert(response.data.message);\r\n            })\r\n            .catch(error => {\r\n                console.log('FORGOT PASSWORD ERROR', error.response.data);\r\n                alert(error.response.data.error);\r\n                setValues({...values, buttonText: 'Request password reset link'});\r\n            });\r\n    };\r\n\r\n\r\n    const passwordForgotForm = () => (\r\n        <div>\r\n            <div>\r\n                <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n                    <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                        <img\r\n                            className=\"mx-auto h-12 w-auto\"\r\n                            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n                            alt=\"Workflow\"\r\n                        />\r\n                        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Forgot Password</h2>\r\n                    </div>\r\n                    <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n                        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n                            <div className=\"space-y-6\">\r\n                                <div>\r\n                                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                                        Email address\r\n                                    </label>\r\n                                    <div className=\"mt-1\">\r\n                                        <input\r\n                                            id=\"email\"\r\n                                            name=\"email\"\r\n                                            type=\"email\"\r\n                                            autoComplete=\"email\"\r\n                                            value={email}\r\n                                            onChange={handleChange('email')}\r\n                                            required\r\n                                            className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        onClick={clickSubmit}\r\n                                        className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                    >\r\n                                        {buttonText}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"col-d-6 offset-md-3\">\r\n                {passwordForgotForm()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setAuthUserData} from \"../../redux/thunk/login/login-thunk\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useTypedSelector} from \"../../redux/store/store\";\r\n\r\n\r\nexport const HomePage = (props: any) => {\r\n\r\n    const isAuth = useTypedSelector<boolean>(state => state.login.isAuth)\r\n    const user = useSelector((state: any) => state.login.user)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(!user){\r\n            dispatch(setAuthUserData())\r\n        }\r\n    }, [])\r\n    if(!isAuth){\r\n        return <Redirect to=\"/login\"/>\r\n    }\r\n    return (\r\n        <div style={{maxWidth: \"80%\", margin: \"auto\"}}>\r\n            <img src={user?.avatar} alt=\"\"/>\r\n            <p>{user?.email}</p>\r\n            <p>{user?._id}</p>\r\n            <p>{user?.name}</p>\r\n        </div>\r\n    )\r\n}","import {ActionTypes} from \"../constants/constants\";\r\nimport {ICardsPack, IResponsePacksType} from \"../../../server/api\";\r\n\r\n\r\nexport const getPacks = (cards: IResponsePacksType | undefined) => ({\r\n    type: ActionTypes.GET_PACKS, payload: {...cards}\r\n} as const)\r\n\r\nexport const setPacks = (name: string) => ({\r\n    type: ActionTypes.SET_PACKS, payload: {name}\r\n} as const)\r\n\r\nexport const deletePacks = (_id: string) => ({\r\n    type: ActionTypes.DELETE_PACKS, payload: {_id}\r\n} as const)\r\n\r\nexport const updatePacks = (_id: string, name: string) => ({\r\n    type: ActionTypes.UPDATE_PACKS, payload: {_id, name}\r\n} as const)\r\n\r\nexport const loadingPacks = (loading: boolean) => ({\r\n    type: ActionTypes.LOADING_PACKS, payload: {loading}\r\n} as const)\r\n\r\nexport const setCurrentPage = ( page: number) => ({\r\n    type: ActionTypes.SET_CURRENT_PAGE, payload: {page} } as const )\r\n\r\n\r\n\r\n\r\n","import {deletePacks, getPacks, loadingPacks, setPacks, updatePacks} from \"../../actions/packs-actions\";\r\n\r\nimport {ICardsPack, IResponsePacksType, packsAPI} from \"../../../../server/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {PacksActionsType} from \"../../reducers/packs/packs-reducer\";\r\n\r\n\r\nexport const getPacksTC = (page?: number, pageCount?: number) => (dispatch: Dispatch<PacksActionsType>) => {\r\n    dispatch(loadingPacks(false))\r\n    return packsAPI.getCards(page,pageCount)\r\n        .then((res: IResponsePacksType | undefined) => {\r\n            console.log(res)\r\n            dispatch(getPacks(res))\r\n            dispatch(loadingPacks(true))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(loadingPacks(false))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\nexport const setPacksTC = (name: string) => (dispatch: Dispatch<PacksActionsType>) => {\r\n    dispatch(loadingPacks(false))\r\n    return packsAPI.addPack(name)\r\n        .then((cards) => {\r\n            console.log(cards)\r\n            dispatch(setPacks(name))\r\n            dispatch(loadingPacks(true))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(loadingPacks(false))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\nexport const deletePacksTC = (_id: string) => (dispatch: Dispatch<PacksActionsType>) => {\r\n    dispatch(loadingPacks(false))\r\n    return packsAPI.deleteCards(_id)\r\n        .then(() => {\r\n            dispatch(deletePacks(_id))\r\n            dispatch(loadingPacks(true))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(loadingPacks(false))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\nexport const updatePacksTC = (_id: string, name: string) => (dispatch: Dispatch<PacksActionsType>) => {\r\n    dispatch(loadingPacks(false))\r\n    return packsAPI.updateCards(_id, name)\r\n        .then(() => {\r\n            dispatch(updatePacks(_id, name))\r\n            dispatch(loadingPacks(true))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(loadingPacks(false))\r\n            console.error(err)\r\n        })\r\n}\r\n","import {useDispatch} from \"react-redux\";\r\nimport {getPacksTC} from \"../../redux/thunk/packs/packs-thunk\";\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    numberOfPages: number\r\n    currentPage: number\r\n    page: number\r\n    setPage: (page: number) => void\r\n}\r\n\r\n\r\nexport const Pagination = (props: PropsType) => {\r\n    console.log(props)\r\n    let dispatch = useDispatch()\r\n\r\n    const arrayOfPages: number[] = []\r\n    for (let i = props.currentPage - 4; i <= props.currentPage + 4 && i < props.numberOfPages; i++) {\r\n        if (i < 2)\r\n            i = 2\r\n        arrayOfPages.push(i)\r\n    }\r\n    const PageButton = ({value}: { value: number }) => {\r\n     return <button\r\n            className={`${value === props.page ? \"bg-red-500 text-black\" : \"\" } ${\"text-sm ml-1 mr-1 bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 rounded-l\"}`}\r\n            onClick={() => {\r\n                props.setPage(value)\r\n                dispatch(getPacksTC(props.page))\r\n            }}\r\n        >{value}\r\n        </button>\r\n    }\r\n    return <div>\r\n        <div\r\n            className=\"px-5 py-5 bg-white border-t flex flex-col xs:flex-row items-center xs:justify-between          \">\r\n                        <span className=\"text-xs xs:text-sm text-gray-900\">\r\n                            Showing {props.page} to {props.currentPage} of {props.numberOfPages} Entries\r\n                        </span>\r\n            <div className=\"inline-flex mt-2 xs:mt-0\">\r\n                <PageButton value={1}/> {arrayOfPages[0] !== 2 ? \"... \" : \"\"}\r\n                {arrayOfPages.map((value, i) => <> <PageButton key={i} value={value}/> </>)}\r\n                {arrayOfPages[arrayOfPages.length - 1] !== props.numberOfPages - 1 ? \" ... \" : \"\"}\r\n                <PageButton value={props.numberOfPages}/>\r\n            </div>\r\n        </div>\r\n\r\n    </div>;\r\n}\r\n// От Антон Щёголев всем:  09:45 PM\r\n// type PropsType = {\r\n//     numberOfPages: number\r\n//     currentPage: number\r\n//     changePage: (page: number) => void\r\n// }\r\n//\r\n// export const Pagination = (props: PropsType) => {\r\n//     const arrayOfPages: number[] = []\r\n//     for (let i = props.currentPage - 4; i <= props.currentPage + 4 && i < props.numberOfPages; i++) {\r\n//         if (i < 2)\r\n//             i = 2\r\n//         arrayOfPages.push(i)\r\n//     }\r\n//     const PageButton = ({value}: { value: number }) => <SuperButton\r\n//         red={value === props.currentPage}\r\n//         onClick={() => {\r\n//             props.changePage(value)\r\n//         }}>{value} </SuperButton>\r\n//     return <div>\r\n//         <PageButton value={1}/> {arrayOfPages[0] !== 2 ? \"... \" : \"\"}\r\n//         {arrayOfPages.map((value, i) => <PageButton key={i} value={value}/>)}\r\n//         {arrayOfPages[arrayOfPages.length - 1] !== props.numberOfPages - 1 ? \" ... \" : \"\"}\r\n//         <PageButton value={props.numberOfPages}/>\r\n//     </div>;\r\n// }\r\n","/* This example requires Tailwind CSS v2.0+ */\r\nimport React, {ChangeEvent, Fragment, useState} from 'react'\r\nimport { Dialog, Transition } from '@headlessui/react'\r\nimport { CheckIcon } from '@heroicons/react/outline'\r\n\r\nexport function ModalComponent({open, setOpen, setQuestion, addCard, question, answer, setAnswer} : {setAnswer?: (answer: string) => void,answer?: string,question: any,open: boolean, setOpen: (open: boolean) => void, setQuestion: any, addCard?: any} ) {\r\n\r\n    return (\r\n        <Transition.Root show={open} as={Fragment}>\r\n            <Dialog as=\"div\" static className=\"fixed z-10 inset-0 overflow-y-auto\" open={open} onClose={setOpen}>\r\n                <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n                    <Transition.Child\r\n                        as={Fragment}\r\n                        enter=\"ease-out duration-300\"\r\n                        enterFrom=\"opacity-0\"\r\n                        enterTo=\"opacity-100\"\r\n                        leave=\"ease-in duration-200\"\r\n                        leaveFrom=\"opacity-100\"\r\n                        leaveTo=\"opacity-0\"\r\n                    >\r\n                        <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n                    </Transition.Child>\r\n\r\n                    {/* This element is to trick the browser into centering the modal contents. */}\r\n                    <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\r\n            &#8203;\r\n          </span>\r\n                    <Transition.Child\r\n                        as={Fragment}\r\n                        enter=\"ease-out duration-300\"\r\n                        enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n                        enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n                        leave=\"ease-in duration-200\"\r\n                        leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n                        leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n                    >\r\n                        <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\r\n                            <div>\r\n                                <div className=\"mt-3 text-center sm:mt-5\">\r\n                                    <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\r\n                                        <div className=\"flex items-center justify-center\">\r\n                                            <div className=\"w-full max-w-md\">\r\n                                                <form className=\"bg-white shadow-lg rounded px-12 pt-6 pb-8 mb-4\">\r\n                                                    <div className=\"mb-4\">\r\n                                                        <label\r\n                                                            className=\"block text-gray-700 text-sm font-normal mb-2\"\r\n                                                            htmlFor=\"username\"\r\n                                                        >\r\n                                                            Question\r\n                                                        </label>\r\n                                                        <input\r\n                                                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                                            name=\"question\"\r\n                                                            value={question}\r\n                                                            onChange={(e: ChangeEvent<HTMLInputElement>) => setQuestion(e.currentTarget.value)}\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            autoFocus\r\n                                                            placeholder=\"Question\"\r\n                                                        />\r\n                                                        <input\r\n                                                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                                            name=\"text\"\r\n                                                            value={answer}\r\n                                                            onChange={(e: ChangeEvent<HTMLInputElement>) => setAnswer ? setAnswer(e.currentTarget.value) : \"\"}\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            autoFocus\r\n                                                            placeholder=\"Answer\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"flex items-center justify-between\">\r\n                                                        <button\r\n                                                            onClick={addCard}\r\n                                                            type=\"button\"\r\n                                                            className=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                                        >\r\n                                                            ADD\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Dialog.Title>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mt-5 sm:mt-6\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm\"\r\n                                    onClick={() => setOpen(false)}\r\n                                >\r\n                                    Go back to dashboard\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Transition.Child>\r\n                </div>\r\n            </Dialog>\r\n        </Transition.Root>\r\n    )\r\n}\r\n\r\n\r\nexport function ModalPacks({open, setOpen, setQuestion, addPack, question, answer, setAnswer} : {setAnswer?: (answer: string) => void,answer?: string,question?: any,open: boolean, setOpen: (open: boolean) => void, setQuestion?: any, addPack?: any} ) {\r\n\r\n    return (\r\n        <Transition.Root show={open} as={Fragment}>\r\n            <Dialog as=\"div\" static className=\"fixed z-10 inset-0 overflow-y-auto\" open={open} onClose={setOpen}>\r\n                <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n                    <Transition.Child\r\n                        as={Fragment}\r\n                        enter=\"ease-out duration-300\"\r\n                        enterFrom=\"opacity-0\"\r\n                        enterTo=\"opacity-100\"\r\n                        leave=\"ease-in duration-200\"\r\n                        leaveFrom=\"opacity-100\"\r\n                        leaveTo=\"opacity-0\"\r\n                    >\r\n                        <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n                    </Transition.Child>\r\n\r\n                    {/* This element is to trick the browser into centering the modal contents. */}\r\n                    <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\r\n            &#8203;\r\n          </span>\r\n                    <Transition.Child\r\n                        as={Fragment}\r\n                        enter=\"ease-out duration-300\"\r\n                        enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n                        enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n                        leave=\"ease-in duration-200\"\r\n                        leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n                        leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n                    >\r\n                        <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\r\n                            <div>\r\n                                <div className=\"mt-3 text-center sm:mt-5\">\r\n                                    <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\r\n                                        <div className=\"flex items-center justify-center\">\r\n                                            <div className=\"w-full max-w-md\">\r\n                                                <form className=\"bg-white shadow-lg rounded px-12 pt-6 pb-8 mb-4\">\r\n                                                    <div className=\"mb-4\">\r\n                                                        <label\r\n                                                            className=\"block text-gray-700 text-sm font-normal mb-2\"\r\n                                                            htmlFor=\"username\"\r\n                                                        >\r\n                                                            Question\r\n                                                        </label>\r\n                                                        <input\r\n                                                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                                            name=\"question\"\r\n                                                            value={question}\r\n                                                            onChange={(e: ChangeEvent<HTMLInputElement>) => setQuestion(e.currentTarget.value)}\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            autoFocus\r\n                                                            placeholder=\"Name of your card\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"flex items-center justify-between\">\r\n                                                        <button\r\n                                                            onClick={addPack}\r\n                                                            type=\"button\"\r\n                                                            className=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                                        >\r\n                                                            ADD\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Dialog.Title>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mt-5 sm:mt-6\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm\"\r\n                                    onClick={() => setOpen(false)}\r\n                                >\r\n                                    Go back to dashboard\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Transition.Child>\r\n                </div>\r\n            </Dialog>\r\n        </Transition.Root>\r\n    )\r\n}\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useTypedSelector} from \"../../redux/store/store\";\r\nimport {deletePacksTC, getPacksTC, setPacksTC, updatePacksTC} from \"../../redux/thunk/packs/packs-thunk\";\r\nimport {PacksActionsType} from \"../../redux/reducers/packs/packs-reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport {PATH} from \"../../components/Nav/Navigation\";\r\nimport {Pagination} from \"../../components/Pagination/Pagination\";\r\nimport {ModalPacks} from \"../../../common/Modal\";\r\n\r\ninterface ICardsPackType {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string\r\n    cardsCount: number\r\n    grade: number\r\n    shots: number\r\n    rating: number\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n}\r\n\r\n\r\nconst Packs = () => {\r\n\r\n    const currentPage = useTypedSelector(state => state.packs.page)\r\n    const totalCount = useTypedSelector(state => Math.ceil(state.packs.cardPacksTotalCount / state.packs.pageCount))\r\n    let cardsPack = useTypedSelector(state => state.packs.cardPacks)\r\n    const [open, setOpen] = useState<boolean>(false)\r\n    let [onc, seOnc] = useState<string>(\"\")\r\n    let [name, setName] = useState<string>(\"\")\r\n    let [page, setPage] = useState<number>(0)\r\n    let [cardId, setId] = useState<string>(\"\")\r\n    const [searchItem, setSearchItem] = useState<string>(\"\")\r\n    const [num, setNum] = useState<number>(10)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    let addPackResolver: () => (dispatch: Dispatch<PacksActionsType>) => Promise<void> = () => dispatch(setPacksTC(name));\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC(10, num))\r\n    }, [dispatch, num])\r\n\r\n    const onSearchValueChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchItem(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const changeNumber = (newNum: number) => {\r\n        setNum(newNum)\r\n    }\r\n    console.log(num)\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            <div className=\"mt-4 flex flex-col\">\r\n                <button onClick={() => setOpen(!open)}>Open</button>\r\n                <ModalPacks addPack={addPackResolver} setQuestion={setName} question={name} open={open}\r\n                            setOpen={setOpen}/>\r\n                <div className=\"block relative \">\r\n\r\n                    <div className=\"container mx-auto px-4 sm:px-8\">\r\n                        <div className=\"py-8\">\r\n                            <div className=\"my-2 flex sm:flex-row flex-col\">\r\n                                <div className=\"flex flex-row mb-1 sm:mb-0\">\r\n                                    <div className=\"relative\">\r\n                                        <select\r\n                                            onChange={(event) => changeNumber(Number(event.target.value))}\r\n                                            className=\"appearance-none h-full rounded-l border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n\r\n                                            value={num}\r\n                                        >\r\n                                            <option selected={true} value=\"4\">4</option>\r\n                                            <option selected={true} value=\"10\">10</option>\r\n                                            <option value=\"20\">20</option>\r\n                                            <option value=\"50\">50</option>\r\n                                        </select>\r\n                                        <div\r\n                                            className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                                            <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                 viewBox=\"0 0 20 20\">\r\n                                                <path\r\n                                                    d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/>\r\n                                            </svg>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block relative\">\r\n                    <span className=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\r\n                        <svg viewBox=\"0 0 24 24\" className=\"h-4 w-4 fill-current text-gray-500\">\r\n                            <path\r\n                                d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\">\r\n                            </path>\r\n                        </svg>\r\n                    </span>\r\n                                    <input placeholder=\"Search\"\r\n                                           onChange={onSearchValueChange}\r\n                                           className=\"appearance-none rounded-r rounded-l sm:rounded-l-none border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\r\n                                <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\r\n                                    <table className=\"min-w-full leading-normal\">\r\n                                        <thead className=\"bg-gray-50\">\r\n                                        <tr>\r\n                                            <th\r\n                                                scope=\"col\"\r\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                            >\r\n                                                Pack Id\r\n                                            </th>\r\n                                            <th\r\n                                                scope=\"col\"\r\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                            >\r\n                                                Name\r\n                                            </th>\r\n\r\n\r\n                                            <th\r\n                                                scope=\"col\"\r\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                            >\r\n                                                Created\r\n                                            </th>\r\n                                            <th\r\n                                                scope=\"col\"\r\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                            >\r\n                                                Rating\r\n                                            </th>\r\n                                            <th\r\n                                                scope=\"col\"\r\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                            >\r\n                                                Cards Count\r\n                                            </th>\r\n                                            <th\r\n                                                scope=\"col\"\r\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                            >\r\n                                                Shots\r\n                                            </th>\r\n\r\n                                            <th\r\n                                                scope=\"col\"\r\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                            >\r\n                                                Grade\r\n                                            </th>\r\n\r\n                                            <th\r\n                                                scope=\"col\"\r\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                            >\r\n                                                Path\r\n                                            </th>\r\n                                            <th\r\n                                                scope=\"col\"\r\n                                                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                            >\r\n                                                <button\r\n                                                    onClick={addPackResolver}\r\n                                                    type=\"button\"\r\n                                                    className=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                                >\r\n\r\n                                                    Add pack\r\n                                                </button>\r\n                                            </th>\r\n                                            <th scope=\"col\" className=\"relative px-6 py-3\">\r\n                                                <span className=\"sr-only\">Edit</span>\r\n                                            </th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                        {cardsPack?.filter((val) => {\r\n                                            return searchItem === \"\" || val.name.toLowerCase().includes(searchItem.toLowerCase());\r\n                                        }).map((cards: ICardsPackType) => {\r\n                                            const deletePackResolver: () => (dispatch: Dispatch<PacksActionsType>) => Promise<void> = () => dispatch(deletePacksTC(cards._id));\r\n\r\n\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards._id}</td>\r\n                                                    {cardId === cards._id && open ?\r\n                                                        <input type=\"text\"\r\n                                                               onBlur={() => {\r\n                                                                   setId(cards._id)\r\n                                                                   setOpen(false)\r\n                                                               }}\r\n                                                               autoFocus\r\n                                                               onChange={(e) => seOnc(e.currentTarget.value)}\r\n                                                               placeholder=\"Custom focus style\"\r\n                                                               className=\"mt-5 focus:outline-none focus:ring focus:border-blue-300 rounded-sm border-indigo-900\"\r\n                                                        />\r\n                                                        :\r\n                                                        <td onDoubleClick={() => {\r\n                                                            setId(cards._id)\r\n                                                            setOpen(true)\r\n                                                        }}\r\n                                                            className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{cards.name}</td>\r\n\r\n                                                    }\r\n                                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.created}</td>\r\n                                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.rating}</td>\r\n                                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.cardsCount}</td>\r\n                                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.shots}</td>\r\n                                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.grade}</td>\r\n                                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.path}</td>\r\n                                                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                                                        <button\r\n                                                            onClick={deletePackResolver}\r\n                                                            type=\"button\"\r\n                                                            className=\"inline-flex mr-2 items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                                        >\r\n                                                            Delete\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={() => dispatch(updatePacksTC(cards._id, onc))}\r\n                                                            type=\"button\"\r\n                                                            className=\"inline-flex mr-2 items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                                        >\r\n                                                            Update\r\n                                                        </button>\r\n                                                        <Link to={`${PATH.CARDS}${cards._id}`}>\r\n                                                            Cards\r\n                                                        </Link>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <Pagination currentPage={currentPage} numberOfPages={totalCount}\r\n                                                page={page}\r\n                                                setPage={setPage}/>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Packs;\r\n","import {ActionTypes} from \"../constants/constants\";\r\nimport {CardsType} from \"../../../server/api\";\r\n\r\n\r\nexport const setCards = (cards: CardsType[]) => ({\r\n    type: ActionTypes.SET_CARDS, payload: {cards}\r\n} as const)\r\n\r\nexport const createCards = (cardsPack_id: string, question: string,answer: string) => ({\r\n    type: ActionTypes.ADD_CARDS, payload: {cardsPack_id, question,answer}\r\n} as const)\r\n\r\nexport const GET_CARDS_ID = (cardsPack_id: string) => ({\r\n    type: ActionTypes.GET_CARDS_ID, payload: {cardsPack_id}\r\n} as const);\r\n\r\n\r\nexport const setFilteredCards = (filteredCards:FilteredCardsType ) => ({\r\n    type: ActionTypes.SET_FILTERED_CARDS, payload: {filteredCards}\r\n} as const)\r\n\r\nexport const setCardsGrade = (_id: string,grade:number) => ({\r\n    type: ActionTypes.SET_CARDS_GRADE, payload: {_id,grade}\r\n} as const)\r\n\r\nexport type FilteredCardsType = {\r\n    minGrade: number\r\n    maxGrade: number\r\n    packName: string\r\n}\r\n","import {CardsAPI, CardsType} from \"../../../../server/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {createCards, GET_CARDS_ID, setCards} from \"../../actions/cards-actions\";\r\nimport {ActionsType} from \"../../reducers/cards/cards-reducer\";\r\nimport {RootStateType} from \"../../store/store\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {logoutTC} from \"../login/login-thunk\";\r\n\r\n\r\nexport const getCardsTC = (_id: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    return CardsAPI.getCards(_id)\r\n        .then((res) => {\r\n            dispatch(setCards(res.data.cards))\r\n        }).then((res: any) => {\r\n            let cardsPack_id = res.data.newCard.cardsPack_id\r\n            dispatch(GET_CARDS_ID(cardsPack_id))\r\n            console.log(cardsPack_id)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const createCardsTC = (cardsPack_id: string, question: string, answer: string) => (dispatch: ThunkDispatch<RootStateType, unknown, ActionsType>) => {\r\n    return CardsAPI.createCards(cardsPack_id, question, answer)\r\n        .then((res:any) => {\r\n            dispatch(createCards(cardsPack_id, question, answer))\r\n            dispatch(GET_CARDS_ID(res.newCard._id))\r\n        })\r\n        .catch((error) => {\r\n            alert(error.response.data.error)\r\n        })\r\n}\r\n\r\nexport const deleteCardsTC = (cardsPack_id: string) => (dispatch: ThunkDispatch<RootStateType, unknown, ActionsType>) => {\r\n    return CardsAPI.deleteCards(cardsPack_id)\r\n        .then((res) => {\r\n            dispatch(getCardsTC(res.data.deletedCard.cardsPack_id))\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const updateCardsTC = (cards: CardsType) => (dispatch: ThunkDispatch<RootStateType, unknown, ActionsType>) => {\r\n    return CardsAPI.updateCards(cards)\r\n        .then((res) => {\r\n            dispatch(getCardsTC(res.data.card.cardsPack_id))\r\n        })\r\n        .catch((err) => {\r\n            console.error(err)\r\n        })\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useTypedSelector} from \"../../redux/store/store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {CardsType} from \"../../../server/api\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Dispatch} from \"redux\";\r\nimport {PacksActionsType} from \"../../redux/reducers/packs/packs-reducer\";\r\nimport {createCardsTC, deleteCardsTC, getCardsTC, updateCardsTC} from \"../../redux/thunk/cards/cards-thunk\";\r\nimport {ModalComponent} from '../../../common/Modal';\r\n\r\nexport const Cards = () => {\r\n    const {_id}: { _id: string } = useParams();\r\n    const dispatch = useDispatch()\r\n    const cardspackId = useTypedSelector((state)=> state.cards.cardsPack_id)\r\n    const cards: CardsType[] = useTypedSelector(state => state.cards.cards)\r\n    const [question, setQuestion] = useState(\"\")\r\n    const [answer, setAnswer] = useState(\"\")\r\n    const cardsPackData: any = {\r\n        card: {\r\n            cardsPack_id: \"609944dfe00ab80004f46989\",\r\n            question: question, // если не отправить будет таким\r\n            answer: answer, // если не отправить будет таким\r\n            grade: 0, // 0..5, не обязателен\r\n            shots: 0, // не обязателен\r\n            rating: 0, // не обязателен\r\n            answerImg: \"base 64\", // не обязателен\r\n            questionImg: \"base 64\", // не обязателен\r\n            questionVideo: \"base 64\", // не обязателен\r\n            answerVideo: \"base 64\", // не обязателен\r\n            type: \"card\", // если не отправить будет таким\r\n        }\r\n    }\r\n\r\n\r\n    let addPackResolver: () => (dispatch: Dispatch<PacksActionsType>) => Promise<void> = () => dispatch(createCardsTC(\"609944dfe00ab80004f46989\", question,answer));\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"GET CARDS\")\r\n        dispatch(getCardsTC(_id));\r\n    }, [dispatch,_id,cardspackId])\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => setOpen(!open)}>Open</button>\r\n            <ModalComponent setQuestion={setQuestion} setAnswer={setAnswer} answer={answer} question={question}\r\n                            addCard={addPackResolver} open={open} setOpen={setOpen}/>\r\n            <label className=\"inline-flex items-center mt-3\">\r\n                <span className=\"ml-2 text-gray-700\">Cards</span>\r\n            </label>\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                    <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                        Question\r\n                    </th>\r\n                    <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                        Answer\r\n                    </th>\r\n                    <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                        Grade\r\n                    </th>\r\n                    <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                        Updated\r\n                    </th>\r\n                    <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                        Url\r\n                    </th>\r\n                    <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                        {/*<button*/}\r\n                        {/*    onClick={addPackResolver}*/}\r\n                        {/*    type=\"button\"*/}\r\n                        {/*    className=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"*/}\r\n                        {/*>*/}\r\n                        {/*    ADD*/}\r\n                        {/*</button>*/}\r\n                    </th>\r\n                </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {cards?.map((cards) => {\r\n                    const updatedQuestion: any = {\r\n                        cardsPack_id: \"609944dfe00ab80004f46989\",\r\n                        _id: cards._id,\r\n                        question: \"nopenopenope\", // если не отправить будет таким\r\n                        answer: \"no answer\", // если не отправить будет таким\r\n                        grade: 0, // 0..5, не обязателен\r\n                        shots: 0, // не обязателен\r\n                        rating: 0, // не обязателен\r\n                        answerImg: \"base 64\", // не обязателен\r\n                        questionImg: \"base 64\", // не обязателен\r\n                        questionVideo: \"base 64\", // не обязателен\r\n                        answerVideo: \"base 64\", // не обязателен\r\n                        type: \"card\", // если не отправить будет таким\r\n                    }\r\n                    return (\r\n                        <tr>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.question}</td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{cards.answer}</td>\r\n\r\n\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.grade}</td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.updated}</td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{\"some img\"}</td>\r\n\r\n\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                                <button\r\n                                    onClick={() => {\r\n                                        return dispatch(deleteCardsTC(cards._id))\r\n                                    }}\r\n                                    type=\"button\"\r\n                                    className=\"inline-flex mr-2 items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => {\r\n                                        return dispatch(updateCardsTC(updatedQuestion))\r\n                                    }}\r\n                                    type=\"button\"\r\n                                    className=\"inline-flex mr-2 items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                >\r\n                                    Update\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>)\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter, HashRouter, Route, Switch} from 'react-router-dom';\r\nimport {Login} from '../screens/Login/Login';\r\nimport Registration from '../screens/Registration/Registration';\r\nimport {Navigation, PATH} from \"../components/Nav/Navigation\";\r\nimport {ResetPassword} from \"../screens/ResetPassword/ResetPassword\";\r\nimport {ForgotPassword} from \"../screens/ForgotPassword/ForgotPassoword\";\r\n\r\nimport {HomePage} from \"../screens/HomePage/HomePage\";\r\nimport Packs from \"../screens/Packs/Packs\";\r\nimport {Cards} from \"../screens/Cards/Cards\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../redux/store/store\";\r\n\r\nexport default function Routing() {\r\n    const isAuth = useSelector((state:RootStateType) => state.login.isAuth)\r\n\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <div className=\"app-wrapper-content\">\r\n\r\n                <HashRouter>\r\n                    <Navigation/>\r\n                    <Switch>\r\n                        <Route exact\r\n                               component={Login}\r\n                               path={PATH.LOGIN}/>\r\n                        <Route exact\r\n                               component={HomePage}\r\n                               path={PATH.HOME}/>\r\n                        <Route exact\r\n                               component={Registration}\r\n                               path={PATH.REGISTER}/>\r\n                        <Route\r\n                            exact\r\n                            path={PATH.FORGOT}\r\n                            component={ForgotPassword}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={PATH.PACKS}\r\n                            component={Packs}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/cards/:_id\"}\r\n                            component={Cards}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/set-new-password/:token\"\r\n                            component={ResetPassword}\r\n                        />\r\n                    </Switch>\r\n                </HashRouter>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Routing from './ui/routing/Routing';\r\nimport './index.css';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from \"./ui/redux/store/store\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <Routing/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}