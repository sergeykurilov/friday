{"version":3,"sources":["ui/redux/constants/constants.ts","reportWebVitals.ts","ui/components/Input/Input.tsx","server/api.ts","ui/redux/actions/regisration-actions.ts","ui/redux/actions/login-actions.ts","ui/redux/thunk/login/login-thunk.ts","ui/components/Input/ValidateInput.tsx","common/WithSocial.tsx","ui/redux/reducers/registration/registration-reducer.ts","ui/redux/reducers/registration/login-reducer.ts","ui/redux/reducers/packs/packs-reducer.ts","ui/redux/reducers/cards/cards-reducer.ts","ui/redux/store/store.ts","ui/screens/Login/Login.tsx","ui/components/Nav/Navigation.tsx","ui/redux/thunk/registration/registration-thunk.ts","ui/screens/Registration/Registration.tsx","ui/screens/ResetPassword/ResetPassword.tsx","ui/screens/ForgotPassword/ForgotPassoword.tsx","ui/screens/HomePage/HomePage.tsx","ui/redux/actions/packs-actions.ts","ui/redux/thunk/packs/packs-thunk.ts","ui/components/Pagination/Pagination.tsx","ui/screens/Packs/Packs.tsx","ui/redux/thunk/cards/cards-thunk.ts","ui/redux/actions/cards-actions.ts","ui/screens/Cards/Cards.tsx","ui/routing/Routing.tsx","index.tsx"],"names":["ActionTypes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Input","props","onChange","event","setValue","target","value","type","placeholder","instance","axios","create","withCredentials","baseURL","registerAPI","regData","post","loginAPI","loginData","res","data","response","console","log","delete","packsAPI","get","packData","_id","name","put","cardsPack","CardsAPI","cardsPack_id","card","userRegisterStatus","status","USER_REGISTER_STATUS","payload","login","user","isAuth","LOGIN","logoutTC","dispatch","a","undefined","LOGOUT","localStorage","removeItem","handlePasswordChange","setPassword","setPasswordError","e","currentTarget","passwordRegex","RegExp","match","handleEmailChange","setEmail","setEmailError","emailRegex","ValidateInput","funcName","required","id","error","htmlFor","className","role","WithSocial","href","aria-hidden","fill","viewBox","fillRule","d","clipRule","initialState","isRegistration","cardPacks","user_id","path","cardsCount","grade","shots","rating","created","updated","__v","cardPacksTotalCount","maxCardsCount","minCardsCount","page","pageCount","loading","cards","cardsTotalCount","filteredCards","packName","maxGrade","minGrade","packUserId","rootReducer","combineReducers","registration","state","action","USER_REGISTER","USER_REGISTER_ERROR","packs","GET_PACKS","LOADING_PACKS","SET_PACKS","DELETE_PACKS","ADD_CARDS","newCards","SET_CARDS","SET_FILTERED_CARDS","SET_CARDS_GRADE","map","c","store","createStore","applyMiddleware","thunk","window","__store__","useTypedSelector","useSelector","Login","useState","email","password","rememberMe","setRememberMe","emailError","passwordError","resData","useDispatch","to","onChangePassword","onChangeEmail","onClick","setItem","token","loginTC","classNames","classes","filter","Boolean","join","PATH","Navigation","as","open","src","alt","Button","show","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","static","Item","active","Panel","userRegistrationTC","catch","err","in","Registration","React","checked","ResetPassword","newPassword","buttonText","values","setValues","useEffect","params","handleChange","clickSubmit","preventDefault","method","url","resetPasswordToken","autoComplete","ForgotPassword","history","alert","message","passwordForgotForm","HomePage","getItem","style","maxWidth","margin","avatar","loadingPacks","getPacksTC","setPacksTC","setPacks","deletePacksTC","deletePacks","updatePacksTC","UPDATE_PACKS","updatePacks","Pagination","Packs","cardsPackData","deckCover","private","setOpen","onc","seOnc","cardId","setId","scope","onBlur","autoFocus","onDoubleClick","getCardsTC","Cards","useParams","question","answer","answerImg","questionImg","questionVideo","answerVideo","updatedQuestion","deletedCard","updateCardsTC","Routing","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97855575.chunk.js","sourcesContent":["export enum ActionTypes  {\r\n    USER_REGISTER = 'REGISTRATION/USER_REGISTER',\r\n    USER_REGISTER_ERROR = 'REGISTRATION/USER_REGISTER_ERROR',\r\n    USER_REGISTER_STATUS = 'REGISTRATION/USER_REGISTER_STATUS',\r\n    SET_USER = \"SET_USER\",\r\n    LOGOUT = \"LOGOUT\",\r\n    LOGIN= \"LOGIN\",\r\n    GET_PACKS = \"PACKS/GET_PACKS\",\r\n    SET_PACKS = \"PACKS/SET_PACKS\",\r\n    UPDATE_PACKS = \"PACKS/UPDATE_PACKS\",\r\n    LOADING_PACKS = \"PACKS/LOADING_PACKS\",\r\n    DELETE_PACKS = \"PACKS/DELETE_PACKS\",\r\n    SET_FILTERED_CARDS = \"CARDS/SET_FILTERED_CARDS\",\r\n    ADD_CARDS = \"CARDS/ADD_CARDS\",\r\n    SET_CARDS_GRADE = \"CARDS/SET_CARDS_GRADE\",\r\n    SET_CARDS = \"CARDS/SET_CARDS\",\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\n\r\nconst Input = (props:any) => {\r\n    return (\r\n        <input onChange={(event)=> props.setValue(event.target.value)}\r\n               value={props.value}\r\n               type={props.type}\r\n               placeholder={props.placeholder}\r\n               {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Input;","import axios from \"axios\";\r\nimport {RegistrationRequestType, RegistrationResponseType} from \"../ui/redux/thunk/registration/registration-thunk\";\r\nimport {LoginRequestType, LoginResponseType} from \"../ui/redux/thunk/login/login-thunk\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n});\r\n\r\n///Обьединить в один инстанс как в тудулисте\r\n\r\nexport const registerAPI = {\r\n    registerUsers(regData: RegistrationRequestType) {\r\n        return instance.post<RegistrationResponseType>(`auth/register`, {...regData})\r\n    }\r\n};\r\nexport const loginAPI = {\r\n    loginUser(loginData: LoginRequestType) {\r\n        return instance.post<LoginResponseType>(`auth/login`, {...loginData}).then((res: any) => res.data)\r\n    },\r\n    me() {\r\n        return instance\r\n            .post<any>(`auth/me`, {})\r\n            .then((response) => {\r\n                console.log(response)\r\n                return response.data;\r\n            });\r\n    },\r\n    meDelete() {\r\n        return instance\r\n            .delete<any>(`auth/me`, {})\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport const packsAPI = {\r\n    // async getCards(packUser_id: string) {\r\n    async getCards() {\r\n        const response = await instance.get<IResponsePacksType>(\r\n            `/cards/pack?`\r\n            + `pageCount=10`\r\n            + `&page=1`\r\n            // + (packUser_id ? `&user_id=${packUser_id}` : \"\")\r\n            // + `&packName=o`\r\n            // + `&min=2`\r\n            // + `&max=2`\r\n            + `&sortPacks=0updated`\r\n        );\r\n        return response.data;\r\n    },\r\n    setCard(packData: ICardsPack) {\r\n        return instance.post<ICardsPack>(`cards/pack`, {...packData}).then((response) => {\r\n            return response.data\r\n        })\r\n    },\r\n    deleteCards(_id: string) {\r\n        return instance.delete(`cards/pack/?id=${_id}`)\r\n    },\r\n    updateCards(_id: string, name: string) {\r\n        return instance.put(`cards/pack`, {cardsPack: {_id, name}})\r\n    }\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards() {\r\n        return instance.get<IResponsePacksType>(`cards/pack`).then((response) => {\r\n            return response.data\r\n        })\r\n    },\r\n    setCard(packData: ICardsPack) {\r\n        return instance.post<ICardsPack>(`cards/pack`, {...packData}).then((response) => {\r\n            return response.data\r\n        })\r\n    },\r\n    deleteCards(_id: string) {\r\n        return instance.delete(`cards/pack/?id=${_id}`)\r\n    },\r\n    updateCards(_id: string, name: string) {\r\n        return instance.put(`cards/pack`, {cardsPack: {_id, name}})\r\n    }\r\n}\r\n\r\n\r\ntype deckCoverType = \"url\" | \"base64\"\r\n\r\nexport interface ICardsPack {\r\n    name: string // если не отправить будет таким\r\n    path: string // если не отправить будет такой\r\n    grade: number // не обязателен\r\n    shots: number // не обязателен\r\n    rating: number // не обязателен\r\n    deckCover: deckCoverType // не обязателен\r\n    private: boolean // если не отправить будет такой\r\n    type: string // если не отправить будет таким\r\n}\r\n\r\n\r\nexport type CardPacks = [\r\n    {\r\n        _id: string\r\n        user_id: string\r\n        name: string\r\n        path: string\r\n        cardsCount: number\r\n        grade: number\r\n        shots: number\r\n        rating: number\r\n        type: string\r\n        created: string\r\n        updated: string\r\n        __v: number\r\n    },\r\n];\r\n\r\nexport interface IResponsePacksType {\r\n    cardPacks: CardPacks\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n    loading: boolean\r\n}\r\n\r\n\r\nexport const CardsAPI = {\r\n    async getCards(cardsPack_id: string) {\r\n        const response = await instance.get<getCardsResponseType>(`/cards/card?`\r\n            + `cardsPack_id=${cardsPack_id}`\r\n            + \"&pageCount=1000\"\r\n            // + \"&cardQuestion=ne\"\r\n            // + \"&min=2\"\r\n            // + \"&max=3\"\r\n        );\r\n        return response\r\n    },\r\n    createCards(cardsPack: CardsType) {\r\n        return instance.post(`cards/card/`, cardsPack)\r\n    },\r\n    deleteCards(cardsPack_id: string) {\r\n        return instance.delete<deleteCardsResponseType>(`cards/card/?id=${cardsPack_id}`)\r\n    },\r\n    updateCards(card: CardsType) {\r\n        return instance.put<updatedCardResponseType>(`cards/card`, {card})\r\n    }\r\n}\r\n\r\ntype getCardsResponseType = {\r\n    cards: CardsType[],\r\n    page: number,\r\n    pageCount: number,\r\n    cardsTotalCount: number,\r\n    packUserId: string,\r\n}\r\n\r\ntype deleteCardsResponseType = {\r\n    deletedCard: {\r\n        cardsPack_id: string\r\n    }\r\n}\r\n\r\nexport type CardsType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\ntype updatedCardResponseType = {\r\n    card: {\r\n        cardsPack_id: string\r\n    }\r\n}","import {ActionTypes, } from \"../constants/constants\";\r\nimport {RequestStatusType} from \"../reducers/registration/registration-reducer\";\r\n\r\n\r\n// export function requestUsersAction(users:any) {\r\n//     return {\r\n//         type: ActionTypes.SET_USERS,\r\n//         users\r\n//     };\r\n// }\r\n\r\nexport const userRegister = ( isRegistration: boolean) => ({\r\n        type: ActionTypes.USER_REGISTER, payload: {isRegistration} } as const )\r\n\r\nexport const userRegisterError = (error: string) => ({\r\n    type: ActionTypes.USER_REGISTER_ERROR, payload: {error} } as const )\r\n\r\nexport const userRegisterStatus = (status: RequestStatusType) => ({\r\n    type: ActionTypes.USER_REGISTER_STATUS, payload: {status} } as const )\r\n\r\n// currentUser: action.payload,\r\n// isAuth: true\r\n\r\nexport const setUser = (user:any) => ({type: ActionTypes.SET_USER, payload: {user}})\r\nexport const isAuth = (isAuth: boolean) =>  ({type: ActionTypes.SET_USER, payload: {isAuth}})\r\n\r\nexport const logout = () => ({type: ActionTypes.LOGOUT})","import {ActionTypes,} from \"../constants/constants\";\r\n\r\n\r\nexport const login = (user: userType | undefined, isAuth: boolean) => ({\r\n    type: ActionTypes.LOGIN, payload: {user,isAuth}\r\n} as const)\r\n\r\n\r\n\r\n\r\nexport type userType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime?: number\r\n    __v?: number\r\n    error?: string\r\n}","import {instance, loginAPI} from \"../../../../server/api\";\r\nimport {isAuth, logout, setUser, userRegister, userRegisterError, userRegisterStatus} from \"../../actions/regisration-actions\";\r\nimport {Dispatch} from \"redux\";\r\nimport {login, userType} from \"../../actions/login-actions\";\r\n\r\n\r\nexport const loginTC = ({...loginData}: LoginRequestType) => {\r\n    return async (dispatch: Dispatch<LoginActionsType>) => {\r\n        dispatch(login(undefined, false))\r\n        loginAPI.loginUser({...loginData}).then((res: userType) => {\r\n            dispatch(login(res, true))\r\n            localStorage.setItem('token', res.token)\r\n        })\r\n    }\r\n}\r\n\r\nexport const logoutTC = () => {\r\n    return async (dispatch: Dispatch<LoginActionsType>) => {\r\n        dispatch(login(undefined, false))\r\n        loginAPI.meDelete().then((res) => {\r\n            console.log(res)\r\n            dispatch(logout())\r\n            localStorage.removeItem('token')\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = () => async (dispatch: Dispatch<LoginActionsType>) => {\r\n    let data = await loginAPI.me();\r\n    if (localStorage.getItem(\"token\")) {\r\n        dispatch(login(data, false))\r\n    }\r\n};\r\n\r\n// export const authTC = () => {\r\n//     return async (dispatch: Dispatch<LoginActionsType>) => {\r\n//         dispatch(isAuth(false))\r\n//         loginAPI.me().then((res:any) => {\r\n//             try {\r\n//                 console.log(res)\r\n//                 dispatch(setUser(res))\r\n//                 localStorage.setItem('token', res.token)\r\n//             }catch (e:any) {\r\n//                 console.error(e.res.data.error)\r\n//                 localStorage.removeItem('token')\r\n//             }\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport type LoginActionsType = LoginActionType\r\n    | LogOutActionType\r\ntype LoginActionType = ReturnType<typeof setUser>\r\ntype LogOutActionType = ReturnType<typeof logout>\r\nexport type LoginRequestType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type RequestLoginStatusType = 'loading' | 'succeeded' | 'failed'\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}","import React, {ChangeEvent, ChangeEventHandler} from 'react';\r\n\r\nexport const handlePasswordChange = (\r\n        setPassword: (password: string) => void,\r\n        setPasswordError: (password: string | null) => void\r\n    ) => (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value)\r\n    let passwordRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\n    if (e.currentTarget.value.match(passwordRegex)) {\r\n        setPasswordError(null);\r\n    } else {\r\n        setPasswordError('At least 8 digits, 1 uppercase, 1 number and 1 special character');\r\n    }\r\n}\r\n\r\n\r\nexport const handleEmailChange = (\r\n        setEmail: React.Dispatch<React.SetStateAction<string>>,\r\n        setEmailError: React.Dispatch<React.SetStateAction<string | null>>\r\n    ) => (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n    const sQtext = '[^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]';\r\n    const sText = '[^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]';\r\n    const sAtom = '[^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+';\r\n    const sQuotedPair = '\\\\x5c[\\\\x00-\\\\x7f]';\r\n    const sDomainLiteral = '\\\\x5b(' + sText + '|' + sQuotedPair + ')*\\\\x5d';\r\n    const sQuotedString = '\\\\x22(' + sQtext + '|' + sQuotedPair + ')*\\\\x22';\r\n    const sSubDomain = '(' + sAtom + '|' + sDomainLiteral + ')';\r\n    const sWord = '(' + sAtom + '|' + sQuotedString + ')';\r\n    const sDomain = sSubDomain + '(\\\\x2e' + sSubDomain + ')*';\r\n    const sLocalPart = sWord + '(\\\\x2e' + sWord + ')*';\r\n    const sAddrSpec = sLocalPart + '\\\\x40' + sDomain; // complete RFC822 email address spec\r\n    const sValidEmail = '^' + sAddrSpec + '$'; // as whole string\r\n    const emailRegex = new RegExp(sValidEmail);\r\n\r\n    if (e.currentTarget.value.match(emailRegex)) {\r\n        setEmailError(null);\r\n    } else {\r\n        setEmailError('Valid email required');\r\n    }\r\n}\r\n\r\ntype ValidateInputPropsType = {\r\n    funcName: string\r\n    value: string\r\n    onChange: ChangeEventHandler<HTMLInputElement>\r\n    required: boolean\r\n    type: string\r\n    name: string\r\n    id: string\r\n    error: string | null\r\n}\r\n\r\nexport const ValidateInput = ({funcName, value, onChange, required, type, name, id, error}: ValidateInputPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                {funcName}\r\n            </label>\r\n            <div className=\"mt-1\">\r\n                <input\r\n                    id={id}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    name={name}\r\n                    type={type}\r\n                    required={required}\r\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                />\r\n            </div>\r\n\r\n            {error &&\r\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\"\r\n                 role=\"alert\">\r\n                <strong className=\"font-bold\">{error}</strong>\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// TODO!\r\nexport function collateData() {\r\n\r\n}","import React from 'react';\r\n\r\nconst WithSocial = () => {\r\n    return (\r\n        <div className=\"mt-6\">\r\n            <div className=\"relative\">\r\n                <div className=\"absolute inset-0 flex items-center\">\r\n                    <div className=\"w-full border-t border-gray-300\"/>\r\n                </div>\r\n                <div className=\"relative flex justify-center text-sm\">\r\n                    <span className=\"px-2 bg-white text-gray-500\">Or continue with</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mt-6 grid grid-cols-3 gap-3\">\r\n                <div>\r\n                    <a\r\n                        href=\"https://www.facebook.com\"\r\n                        className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                    >\r\n                        <span className=\"sr-only\">Sign in with Facebook</span>\r\n                        <svg className=\"w-5 h-5\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z\"\r\n                                clipRule=\"evenodd\"\r\n                            />\r\n                        </svg>\r\n                    </a>\r\n                </div>\r\n\r\n                <div>\r\n                    <a\r\n                        href=\"https://twitter.com/\"\r\n                        className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                    >\r\n                        <span className=\"sr-only\">Sign in with Twitter</span>\r\n                        <svg className=\"w-5 h-5\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path\r\n                                d=\"M6.29 18.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0020 3.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.073 4.073 0 01.8 7.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 010 16.407a11.616 11.616 0 006.29 1.84\"/>\r\n                        </svg>\r\n                    </a>\r\n                </div>\r\n\r\n                <div>\r\n                    <a\r\n                        href=\"https://github.com/\"\r\n                        className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                    >\r\n                        <span className=\"sr-only\">Sign in with GitHub</span>\r\n                        <svg className=\"w-5 h-5\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\"\r\n                                clipRule=\"evenodd\"\r\n                            />\r\n                        </svg>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport {\r\n    WithSocial\r\n}","import {userRegister, userRegisterError, userRegisterStatus} from \"../../actions/regisration-actions\";\r\nimport {ActionTypes} from \"../../constants/constants\";\r\n\r\n\r\nconst initialState = {\r\n    status: 'loading' as RequestStatusType,\r\n    error: null as null | string,\r\n    isRegistration: false\r\n};\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n  //// Собрать все редюсеры в один кейс (будет один пейлоад и стейт :) )\r\n    switch (action.type) {\r\n        case ActionTypes.USER_REGISTER:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        case ActionTypes.USER_REGISTER_ERROR:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        case ActionTypes.USER_REGISTER_STATUS:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport type ActionsType = RegisterUserActionType\r\n    | RegisterUserErrorActionType\r\n    | RegisterUserStatusActionType\r\ntype RegisterUserActionType = ReturnType<typeof userRegister>\r\ntype RegisterUserErrorActionType = ReturnType<typeof userRegisterError>\r\ntype RegisterUserStatusActionType = ReturnType<typeof userRegisterStatus>\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type RequestStatusType = 'loading' | 'succeeded' | 'failed'","import {ActionTypes} from \"../../constants/constants\";\r\nimport {login} from \"../../actions/login-actions\";\r\n\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n};\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport type ActionsType = LoginActionsType\r\ntype LoginActionsType = ReturnType<typeof login>\r\n\r\nexport type InitialStateType = typeof initialState\r\n","import {ActionTypes} from \"../../constants/constants\";\r\nimport {deletePacks, getPacks, loadingPacks, setPacks, updatePacks} from \"../../actions/packs-actions\";\r\n\r\n\r\nconst initialState = {\r\n    cardPacks: [\r\n        {\r\n            _id: \"5eb6cef840b7bf1cf0d8122d\",\r\n            user_id: \"5eb543f6bea3ad21480f1ee7\",\r\n            name: \"no Name\",\r\n            path: \"/def\", // папка\r\n            cardsCount: 25,\r\n            grade: 0, // средняя оценка карточек\r\n            shots: 0,// количество попыток\r\n            rating: 0, // лайки\r\n            type: \"pack\",// ещё будет \"folder\" (папка)\r\n            created: \"2020-05-09T15:40:40.339Z\",\r\n            updated: \"2020-05-09T15:40:40.339Z\",\r\n            __v: 0,\r\n        },\r\n    ],\r\n    cardPacksTotalCount: 14, // количество колод\r\n    maxCardsCount: 4,\r\n    minCardsCount: 0,\r\n    page: 1,// выбранная страница\r\n    pageCount: 4, // количество элементов на странице\r\n    loading: false,\r\n}\r\n\r\nexport type PacksActionsType = GetActionPacksType | LoadingPacksType | SetActionPacksType | DeletePacksType | UpdatePacksType\r\n\r\n\r\ntype GetActionPacksType = ReturnType<typeof getPacks>\r\ntype SetActionPacksType = ReturnType<typeof setPacks>\r\ntype LoadingPacksType = ReturnType<typeof loadingPacks>\r\ntype DeletePacksType = ReturnType<typeof deletePacks>\r\ntype UpdatePacksType = ReturnType<typeof updatePacks>\r\n\r\nexport type InitialPacksStateType = typeof initialState\r\n\r\n\r\n\r\nexport default function packsReducer(state = initialState, action: PacksActionsType): InitialPacksStateType {\r\n    //// Собрать все редюсеры в один кейс (будет один пейлоад и стейт :) )\r\n    switch (action.type) {\r\n        case ActionTypes.GET_PACKS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case ActionTypes.LOADING_PACKS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case ActionTypes.SET_PACKS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case ActionTypes.DELETE_PACKS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import {ActionTypes} from \"../../constants/constants\";\r\nimport {createCards, FilteredCardsType, setCards, setCardsGrade, setFilteredCards} from \"../../actions/cards-actions\";\r\nimport {CardsType} from \"../../../../server/api\";\r\n\r\n\r\nconst initialState = {\r\n    cards: [] as CardsType[],\r\n    cardsTotalCount: 3,\r\n    filteredCards: {\r\n        packName: \"\",\r\n        maxGrade: 15,\r\n        minGrade:0\r\n    } as FilteredCardsType,\r\n    page: 1,\r\n    pageCount: 4,\r\n    packUserId: \"\",\r\n    loading: false,\r\n}\r\n\r\n\r\nexport default function cardsReducer(state = initialState, action: ActionsType): InitialStateType {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_CARDS:\r\n            return {\r\n                ...state,\r\n                ...action.payload.newCards\r\n                }\r\n        case ActionTypes.SET_CARDS:\r\n            return {\r\n                    ...state,\r\n                    cards: action.payload.cards\r\n            }\r\n        case ActionTypes.SET_FILTERED_CARDS:\r\n            return {\r\n              ...state,\r\n                filteredCards: action.payload.filteredCards\r\n            }\r\n        case ActionTypes.SET_CARDS_GRADE:\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(\r\n                    (c => c._id === action.payload._id\r\n                        ? {...c, grade: action.payload.grade}\r\n                        : c\r\n                    ))\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport type ActionsType =  ReturnType<typeof setCards>\r\n    |  ReturnType<typeof createCards>\r\n    |  ReturnType<typeof setFilteredCards>\r\n    |  ReturnType<typeof setCardsGrade>\r\n\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n","import {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {registrationReducer} from \"../reducers/registration/registration-reducer\";\r\nimport {loginReducer} from \"../reducers/registration/login-reducer\";\r\nimport {useSelector, TypedUseSelectorHook} from \"react-redux\";\r\nimport packsReducer from \"../reducers/packs/packs-reducer\";\r\nimport cardsReducer from \"../reducers/cards/cards-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    registration: registrationReducer,\r\n    login: loginReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootStateType> = useSelector","import React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {loginTC} from \"../../redux/thunk/login/login-thunk\";\r\nimport {handleEmailChange, handlePasswordChange, ValidateInput} from \"../../components/Input/ValidateInput\";\r\nimport {WithSocial} from \"../../../common/WithSocial\";\r\nimport {useTypedSelector} from \"../../redux/store/store\";\r\n\r\nexport const Login:React.FC = (props) => {\r\n    const isAuth = useTypedSelector<boolean>(state => state.login.isAuth)\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const [emailError, setEmailError] = useState<string | null>(null);\r\n    const [passwordError, setPasswordError] = useState<string | null>(null);\r\n    const resData = {email,password,rememberMe}\r\n    const dispatch = useDispatch()\r\n\r\n    if(isAuth){\r\n        return <Redirect to=\"/home\"/>\r\n    }\r\n\r\n    const onLoginCallback = () => dispatch(loginTC(resData))\r\n\r\n    let onChangePassword = handlePasswordChange(setPassword, setPasswordError);\r\n    let onChangeEmail = handleEmailChange(setEmail, setEmailError);\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n                <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                    <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\r\n                </div>\r\n                <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n                    <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n                        <div className=\"space-y-6\">\r\n                            <div>\r\n                                <div className=\"mt-1\">\r\n                                    <ValidateInput funcName={\"Email address\"}\r\n                                                   value={email}\r\n                                                   onChange={onChangeEmail}\r\n                                                   required={true}\r\n                                                   type={\"email\"}\r\n                                                   name={\"email\"}\r\n                                                   id={\"email\"}\r\n                                                   error={emailError}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"mt-1\">\r\n                                    <ValidateInput funcName={\"Password\"}\r\n                                                   value={password}\r\n                                                   onChange={onChangePassword}\r\n                                                   required={true}\r\n                                                   type=\"password\"\r\n                                                   name=\"password\"\r\n                                                   id=\"password\"\r\n                                                   error={passwordError}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div className=\"flex items-center\">\r\n                                    <Input\r\n                                        value={rememberMe}\r\n                                        setValue={setRememberMe}\r\n                                        id=\"remember_me\"\r\n                                        name=\"remember_me\"\r\n                                        type=\"checkbox\"\r\n                                        className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                                    />\r\n                                    <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                                        Remember me\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                >\r\n                                    Reset Password\r\n                                </button>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    onClick={onLoginCallback}\r\n                                    type=\"submit\"\r\n                                    className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                >\r\n                                    Sign in\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <WithSocial/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/* This example requires Tailwind CSS v2.0+ */\r\nimport React, {Fragment} from 'react'\r\n\r\nimport {Disclosure, Menu, Transition} from '@headlessui/react'\r\nimport {BellIcon, MenuIcon, XIcon} from '@heroicons/react/outline'\r\nimport {NavLink, Redirect} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/store/store\";\r\nimport {logout} from \"../../redux/actions/regisration-actions\";\r\nimport {ActionTypes} from \"../../redux/constants/constants\";\r\nimport {logoutTC} from \"../../redux/thunk/login/login-thunk\";\r\n\r\nfunction classNames(...classes: string[]) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    FORGOT: \"/forgotpassword\",\r\n    RESET: \"/set-new-password\",\r\n    PACKS: \"/packs\",\r\n    CARDS: \"/cards/\",\r\n    REGISTER: \"/register\",\r\n    HOME: \"/home\"\r\n}\r\n\r\n\r\nexport function Navigation() {\r\n    const isAuth = useSelector((state: RootStateType) => state.login.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <Disclosure as=\"nav\" className=\"bg-white shadow\">\r\n            {({open}) => (\r\n                <>\r\n                    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                        <div className=\"flex justify-between h-16\">\r\n                            <div className=\"flex\">\r\n                                <div className=\"flex-shrink-0 flex items-center\">\r\n                                    <img\r\n                                        className=\"block lg:hidden h-8 w-auto\"\r\n                                        src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n                                        alt=\"Workflow\"\r\n                                    />\r\n                                    <img\r\n                                        className=\"hidden lg:block h-8 w-auto\"\r\n                                        src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-600-mark-gray-800-text.svg\"\r\n                                        alt=\"Workflow\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"hidden sm:ml-6 sm:flex sm:space-x-8\">\r\n                                    {/* Current: \"border-indigo-500 text-gray-900\", Default: \"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700\" */}\r\n                                    {isAuth &&\r\n                                    <NavLink\r\n                                        className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                        to={PATH.HOME}>\r\n                                        Home\r\n                                    </NavLink>\r\n                                    }\r\n                                    {isAuth &&\r\n                                    <NavLink\r\n                                        className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                        to={PATH.FORGOT}>\r\n                                        Forgot\r\n                                    </NavLink>\r\n                                    }\r\n                                    {isAuth &&\r\n                                    <NavLink\r\n                                        className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                        to={PATH.PACKS}>\r\n                                        Packs\r\n                                    </NavLink>\r\n                                    }\r\n                                    {/*{isAuth &&*/}\r\n                                    {/*<NavLink*/}\r\n                                    {/*    className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"*/}\r\n                                    {/*    to={PATH.CARDS}>*/}\r\n                                    {/*    Cards*/}\r\n                                    {/*</NavLink>*/}\r\n                                    {/*}*/}\r\n                                    {!isAuth &&\r\n                                    <NavLink\r\n                                        className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                        to={PATH.LOGIN}>\r\n                                        Login\r\n                                    </NavLink>}\r\n                                    {!isAuth &&\r\n                                    <NavLink\r\n                                        className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                        to={PATH.REGISTER}>\r\n                                        Registration\r\n                                    </NavLink>}\r\n                                    {!isAuth &&\r\n                                    <NavLink\r\n                                        className=\"text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\r\n                                        to={PATH.RESET}>\r\n                                        Reset Password\r\n                                    </NavLink>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"hidden sm:ml-6 sm:flex sm:items-center\">\r\n                                <button\r\n                                    className=\"bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                                    <span className=\"sr-only\">View notifications</span>\r\n                                    <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\r\n                                </button>\r\n\r\n                                {/* Profile dropdown */}\r\n                                <Menu as=\"div\" className=\"ml-3 relative\">\r\n                                    {({open}) => (\r\n                                        <>\r\n                                            <div>\r\n                                                <Menu.Button\r\n                                                    className=\"bg-white rounded-full flex text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                                                    <span className=\"sr-only\">Open user menu</span>\r\n                                                    <img\r\n                                                        className=\"h-8 w-8 rounded-full\"\r\n                                                        src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\r\n                                                        alt=\"\"\r\n                                                    />\r\n                                                </Menu.Button>\r\n                                            </div>\r\n                                            <Transition\r\n                                                show={open}\r\n                                                as={Fragment}\r\n                                                enter=\"transition ease-out duration-200\"\r\n                                                enterFrom=\"transform opacity-0 scale-95\"\r\n                                                enterTo=\"transform opacity-100 scale-100\"\r\n                                                leave=\"transition ease-in duration-75\"\r\n                                                leaveFrom=\"transform opacity-100 scale-100\"\r\n                                                leaveTo=\"transform opacity-0 scale-95\"\r\n                                            >\r\n                                                <Menu.Items\r\n                                                    static\r\n                                                    className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\"\r\n                                                >\r\n                                                    <Menu.Item>\r\n                                                        {({active}) => (\r\n                                                            <a\r\n                                                                href=\"#\"\r\n                                                                className={classNames(\r\n                                                                    active ? 'bg-gray-100' : '',\r\n                                                                    'block px-4 py-2 text-sm text-gray-700'\r\n                                                                )}\r\n                                                            >\r\n                                                                Your Profile\r\n                                                            </a>\r\n                                                        )}\r\n                                                    </Menu.Item>\r\n                                                    <Menu.Item>\r\n                                                        {({active}) => (\r\n                                                            <button\r\n                                                                onClick={() => dispatch(logoutTC())}\r\n                                                                className={classNames(\r\n                                                                    active ? 'bg-gray-100' : '',\r\n                                                                    'block px-4 py-2 text-sm text-gray-700'\r\n                                                                )}\r\n                                                            >\r\n                                                                Sign out\r\n                                                            </button>\r\n                                                        )}\r\n                                                    </Menu.Item>\r\n                                                </Menu.Items>\r\n                                            </Transition>\r\n                                        </>\r\n                                    )}\r\n                                </Menu>\r\n                            </div>\r\n                            <div className=\"-mr-2 flex items-center sm:hidden\">\r\n                                {/* Mobile menu button */}\r\n                                <Disclosure.Button\r\n                                    className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\r\n                                    <span className=\"sr-only\">Open main menu</span>\r\n                                    {open ? (\r\n                                        <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\"/>\r\n                                    ) : (\r\n                                        <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\"/>\r\n                                    )}\r\n                                </Disclosure.Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Disclosure.Panel className=\"sm:hidden\">\r\n                        <div className=\"pt-2 pb-3 space-y-1\">\r\n                            {/* Current: \"bg-indigo-50 border-indigo-500 text-indigo-700\", Default: \"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700\" */}\r\n                            <a\r\n                                href=\"#\"\r\n                                className=\"bg-indigo-50 border-indigo-500 text-indigo-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\"\r\n                            >\r\n                                Dashboard\r\n                            </a>\r\n                            <a\r\n                                href=\"#\"\r\n                                className=\"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\"\r\n                            >\r\n                                Team\r\n                            </a>\r\n                            <a\r\n                                href=\"#\"\r\n                                className=\"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\"\r\n                            >\r\n                                Projects\r\n                            </a>\r\n                            <a\r\n                                href=\"#\"\r\n                                className=\"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium\"\r\n                            >\r\n                                Calendar\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"pt-4 pb-3 border-t border-gray-200\">\r\n                            <div className=\"flex items-center px-4\">\r\n                                <div className=\"flex-shrink-0\">\r\n                                    <img\r\n                                        className=\"h-10 w-10 rounded-full\"\r\n                                        src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"ml-3\">\r\n                                    <div className=\"text-base font-medium text-gray-800\">Tom Cook</div>\r\n                                    <div className=\"text-sm font-medium text-gray-500\">tom@example.com</div>\r\n                                </div>\r\n                                <button\r\n                                    className=\"ml-auto flex-shrink-0 bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                                    <span className=\"sr-only\">View notifications</span>\r\n                                    <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"mt-3 space-y-1\">\r\n                                <a\r\n                                    href=\"#\"\r\n                                    className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100\"\r\n                                >\r\n                                    Your Profile\r\n                                </a>\r\n                                <button\r\n                                    onClick={() => dispatch(logoutTC())}\r\n                                    className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100\"\r\n                                >\r\n                                    Sign out\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Disclosure.Panel>\r\n                </>\r\n            )}\r\n        </Disclosure>\r\n    )\r\n}\r\n","import {registerAPI} from \"../../../../server/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionsType} from \"../../reducers/registration/registration-reducer\";\r\nimport {userRegister, userRegisterError, userRegisterStatus} from \"../../actions/regisration-actions\";\r\n\r\nexport const userRegistrationTC = (regData: RegistrationRequestType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(userRegisterStatus(\"loading\"))\r\n    return registerAPI.registerUsers({...regData})\r\n        .then((res) => {\r\n            console.log(res)\r\n            dispatch(userRegister(true))\r\n            dispatch(userRegisterStatus(\"succeeded\"))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(userRegisterStatus(\"loading\"))\r\n            if (err.response.data.in === \"createUser\") {\r\n                dispatch(userRegisterStatus(\"failed\"))\r\n                dispatch(userRegisterError(err.response.data.error))\r\n            }\r\n        })\r\n}\r\n\r\n\r\nexport type RegistrationRequestType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type RegistrationResponseType = {\r\n    addedUser: {\r\n        _id: string\r\n        email: string\r\n        name: string\r\n        avatar?: string\r\n        publicCardPacksCount: number\r\n        created: Date\r\n        updated: Date\r\n        isAdmin: boolean\r\n        verified: boolean\r\n        rememberMe: boolean\r\n        error?: string\r\n    }\r\n}\r\n\r\nexport type RegistrationUserErrorType = {\r\n    response: {\r\n        data: {\r\n            emailRegExp: {}\r\n            error: string\r\n            in: string\r\n            isEmailValid: boolean\r\n            isPassValid: boolean\r\n            passwordRegExp: string\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/store/store\";\r\nimport {RequestStatusType} from \"../../redux/reducers/registration/registration-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from '../../components/Nav/Navigation';\r\nimport {userRegistrationTC} from \"../../redux/thunk/registration/registration-thunk\";\r\nimport {WithSocial} from '../../../common/WithSocial';\r\nimport {handleEmailChange, handlePasswordChange, ValidateInput} from \"../../components/Input/ValidateInput\";\r\n\r\n\r\nexport default function Registration() {\r\n\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const [passwordError, setPasswordError] = React.useState<string | null>(null);\r\n    const [emailError, setEmailError] = React.useState<string | null>(null);\r\n\r\n    const isRegistration = useSelector<RootStateType, boolean>(registration => registration.registration.isRegistration)\r\n\r\n\r\n    const status = useSelector<RootStateType, RequestStatusType>(registration => registration.registration.status)\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onRegistrationCallback = () => {\r\n        dispatch(userRegistrationTC({email, password, rememberMe}))\r\n    }\r\n\r\n\r\n    if (isRegistration) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Create your account</h2>\r\n            </div>\r\n            <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n                <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n                    <ValidateInput funcName={\"Email address\"} value={email}\r\n                                   onChange={handleEmailChange(setEmail, setEmailError)} required={true}\r\n                                   type={\"email\"} name={\"email\"} id={\"email\"} error={emailError}/>\r\n                    <ValidateInput funcName={\"Password\"} value={password}\r\n                                   onChange={handlePasswordChange(setPassword, setPasswordError)} required={true}\r\n                                   type=\"password\" name=\"password\" id=\"password\" error={passwordError}/>\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center\">\r\n                            <input\r\n                                id=\"remember_me\"\r\n                                name=\"remember_me\"\r\n                                type=\"checkbox\"\r\n                                checked={rememberMe}\r\n                                onClick={() => setRememberMe(true)}\r\n                                className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                            />\r\n                            <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                                Remember me\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"text-sm\">\r\n                            <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n                                Forgot your password?\r\n                            </a>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                            // disabled={status === \"loading\"}\r\n                            onClick={onRegistrationCallback}\r\n                        >\r\n                            Sign up\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <WithSocial/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt from 'jsonwebtoken';\r\nimport {WithSocial} from \"../../../common/WithSocial\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n// export function ResetPassword({ history, match }:any) {\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//     const [error, setError] = useState(\"\");\r\n//     const [success, setSuccess] = useState(\"\");\r\n//\r\n//     const resetPasswordHandler = async (e:any) => {\r\n//         e.preventDefault();\r\n//\r\n//         const config:any = {\r\n//             header: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//             },\r\n//         };\r\n//\r\n//         if (password !== confirmPassword) {\r\n//             setPassword(\"\");\r\n//             setConfirmPassword(\"\");\r\n//             setTimeout(() => {\r\n//                 setError(\"\");\r\n//             }, 5000);\r\n//             return setError(\"Passwords don't match\");\r\n//         }\r\n//\r\n//         try {\r\n//             const { data } = await axios.post(\r\n//                 `https://neko-back.herokuapp.com/2.0/auth/set-new-password/${match.params.token}`,\r\n//                 {\r\n//                     password,\r\n//                 },\r\n//                 config\r\n//             );\r\n//\r\n//             console.log(data);\r\n//             setSuccess(data.data);\r\n//         } catch (error) {\r\n//             setError(error.response.data.error);\r\n//             setTimeout(() => {\r\n//                 setError(\"\");\r\n//             }, 5000);\r\n//         }\r\n//     };\r\n//     return (\r\n//         <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n//             <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n//                 <img\r\n//                     className=\"mx-auto h-12 w-auto\"\r\n//                     src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n//                     alt=\"Workflow\"\r\n//                 />\r\n//                 <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Reset your password</h2>\r\n//             </div>\r\n//\r\n//             <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n//                 <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n//                     <form className=\"space-y-6\" onSubmit={resetPasswordHandler}>\r\n//\r\n//                         <div>\r\n//                             <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n//                                 Password\r\n//                             </label>\r\n//                             <div className=\"mt-1\">\r\n//                                 <input\r\n//                                     id=\"password\"\r\n//                                     name=\"password\"\r\n//                                     type=\"password\"\r\n//                                     autoComplete=\"current-password\"\r\n//                                     value={password}\r\n//                                     onChange={(e) => setPassword(e.target.value)}\r\n//                                     required\r\n//                                     className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                                 />\r\n//                             </div>\r\n//                         </div>\r\n//\r\n//\r\n//                         <div>\r\n//                             <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n//                                 Confirm Password\r\n//                             </label>\r\n//                             <div className=\"mt-1\">\r\n//                                 <input\r\n//                                     id=\"confirmpassword\"\r\n//                                     placeholder=\"Confirm new password\"\r\n//                                     name=\"confirmpassword\"\r\n//                                     type=\"password\"\r\n//                                     autoComplete=\"current-password\"\r\n//                                     value={confirmPassword}\r\n//                                     onChange={(e) => setConfirmPassword(e.target.value)}\r\n//                                     required\r\n//                                     className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                                 />\r\n//                             </div>\r\n//                         </div>\r\n//\r\n//                         <div>\r\n//                             <button\r\n//                                 type=\"submit\"\r\n//                                 className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n//                             >\r\n//                                 Sign in\r\n//                             </button>\r\n//                         </div>\r\n//                     </form>\r\n//\r\n//                   <WithSocial/>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// import 'react-toastify/dist/ReactToastify.min.css';\r\n\r\n\r\nexport const ResetPassword = ({match}: any) => { //props.match from React router DOM\r\n    const [values, setValues] = useState({\r\n        res: {},\r\n        token: '',\r\n        newPassword: '',\r\n        buttonText: 'Reset password'\r\n    })\r\n\r\n    useEffect(() => {\r\n        let token = match.params.token\r\n        console.log(token)\r\n        if (token) {\r\n            setValues({...values, token})\r\n        }\r\n    }, [])\r\n\r\n    const {token, newPassword, buttonText} = values;\r\n\r\n    const handleChange = (event: any) => {\r\n        setValues({...values, newPassword: event.target.value});\r\n    };\r\n    const clickSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        setValues({...values, buttonText: 'Submitting'});\r\n        axios({\r\n            method: 'POST',\r\n            url: `https://neko-back.herokuapp.com/2.0/auth/set-new-password`,\r\n            data: {password: newPassword, resetPasswordToken: token}\r\n        })\r\n            .then(response => {\r\n                console.log('RESET PASSWORD SUCCESS', response);\r\n\r\n                setValues({...values, res: response, buttonText: 'Done'});\r\n                // save the response(user, token) localstorage/cookie\r\n                // alert(response.data.message);\r\n            })\r\n            .catch(error => {\r\n                console.log('FORGOT PASSWORD ERROR', error);\r\n                // alert(error.error);/\r\n                setValues({...values, buttonText: 'Reset password'});\r\n            });\r\n    };\r\n\r\n\r\n    const passwordResetForm = () => (\r\n\r\n        <div>\r\n\r\n            <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n                <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                    <img\r\n                        className=\"mx-auto h-12 w-auto\"\r\n                        src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n                        alt=\"Workflow\"\r\n                    />\r\n                    <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Reset your password</h2>\r\n                </div>\r\n\r\n                <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n                    <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n                        <div className=\"space-y-6\">\r\n\r\n                            <div>\r\n                                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                                    Password\r\n                                </label>\r\n                                <div className=\"mt-1\">\r\n                                    <input\r\n                                        id=\"password\"\r\n                                        placeholder=\"Type new password\"\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                        value={newPassword}\r\n                                        onChange={handleChange}\r\n                                        required\r\n                                        className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    onClick={clickSubmit}\r\n                                    className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                >\r\n                                    {buttonText}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <WithSocial/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"col-d-6 offset-md-3\">\r\n                {passwordResetForm()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;","import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// export function ForgotPassword() {\r\n//\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [error, setError] = useState(\"\");\r\n//     const [success, setSuccess] = useState(\"\");\r\n//\r\n//     const forgotPasswordHandler = async (e:any) => {\r\n//         e.preventDefault();\r\n//\r\n//         const config:any = {\r\n//             method: \"POST\",\r\n//             header: {\r\n//                 \"Accept\":\"application/json\",\r\n//                 \"Content-Type\": \"application/json\",\r\n//             },\r\n//         };\r\n//\r\n//         try {\r\n//             const { data } = await axios.post(\r\n//                 \"https://cards-nya-back.herokuapp.com/1.0/forgotpassword\",\r\n//                 { email },\r\n//                 config\r\n//             );\r\n//\r\n//             setSuccess(data.data);\r\n//         } catch (error) {\r\n//             setError(error.response.data.error);\r\n//             setEmail(\"\");\r\n//             setTimeout(() => {\r\n//                 setError(\"\");\r\n//             }, 5000);\r\n//         }\r\n//     };\r\n//\r\n//\r\n//     return (\r\n//         <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n//             <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n//                 <img\r\n//                     className=\"mx-auto h-12 w-auto\"\r\n//                     src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n//                     alt=\"Workflow\"\r\n//                 />\r\n//                 <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Forgot Password</h2>\r\n//             </div>\r\n//\r\n//             <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n//                 <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n//                     <form className=\"space-y-6\"  onSubmit={forgotPasswordHandler}>\r\n//                         <div>\r\n//                             <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n//                                 Email address\r\n//                             </label>\r\n//                             {error && <span className=\"error-message\">{error}</span>}\r\n//                             {success && <span className=\"success-message\">{success}</span>}\r\n//                             <div className=\"mt-1\">\r\n//                                 <input\r\n//                                     id=\"email\"\r\n//                                     name=\"email\"\r\n//                                     type=\"email\"\r\n//                                     autoComplete=\"email\"\r\n//                                     value={email}\r\n//                                     onChange={(e) => setEmail(e.target.value)}\r\n//                                     required\r\n//                                     className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                                 />\r\n//                             </div>\r\n//                         </div>\r\n//\r\n//                         <div>\r\n//                             <button\r\n//                                 type=\"submit\"\r\n//                                 className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n//                             >\r\n//                                 Send Email\r\n//                             </button>\r\n//                         </div>\r\n//                     </form>\r\n//\r\n//\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport const ForgotPassword = ({history}: any) => {\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        buttonText: 'Send email'\r\n    })\r\n\r\n    const {email, buttonText} = values;\r\n\r\n    const handleChange = (name: any) => (event: any) => {\r\n        // console.log(event.target.value);\r\n        setValues({...values, [name]: event.target.value});\r\n    };\r\n    const clickSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        setValues({...values, buttonText: 'Submitting'});\r\n        axios({\r\n            method: 'POST',\r\n            url: `https://neko-back.herokuapp.com/2.0/auth/forgot`,\r\n            data: {email}\r\n        })\r\n            .then(response => {\r\n                console.log('FORGOT PASSWORD SUCCESS', response);\r\n                // @ts-ignore\r\n                setValues({...values, name: '', email: '', password: '', buttonText: 'Request'});\r\n                // save the response(user, token) localstorage/cookie\r\n                alert(response.data.message);\r\n            })\r\n            .catch(error => {\r\n                console.log('FORGOT PASSWORD ERROR', error.response.data);\r\n                alert(error.response.data.error);\r\n                setValues({...values, buttonText: 'Request password reset link'});\r\n            });\r\n    };\r\n\r\n\r\n    const passwordForgotForm = () => (\r\n        <div>\r\n            <div>\r\n                <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n                    <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n                        <img\r\n                            className=\"mx-auto h-12 w-auto\"\r\n                            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n                            alt=\"Workflow\"\r\n                        />\r\n                        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Forgot Password</h2>\r\n                    </div>\r\n                    <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n                        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n                            <div className=\"space-y-6\">\r\n                                <div>\r\n                                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                                        Email address\r\n                                    </label>\r\n                                    <div className=\"mt-1\">\r\n                                        <input\r\n                                            id=\"email\"\r\n                                            name=\"email\"\r\n                                            type=\"email\"\r\n                                            autoComplete=\"email\"\r\n                                            value={email}\r\n                                            onChange={handleChange('email')}\r\n                                            required\r\n                                            className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        onClick={clickSubmit}\r\n                                        className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                    >\r\n                                        {buttonText}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"col-d-6 offset-md-3\">\r\n                {passwordForgotForm()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport {Navigation} from \"../../components/Nav/Navigation\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginAPI} from \"../../../server/api\";\r\nimport {setAuthUserData} from \"../../redux/thunk/login/login-thunk\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useTypedSelector} from \"../../redux/store/store\";\r\n\r\n\r\nexport const HomePage = (props: any) => {\r\n\r\n    const isAuth = useTypedSelector<boolean>(state => state.login.isAuth)\r\n    const user = useSelector((state: any) => state.login.user)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(!user){\r\n            dispatch(setAuthUserData())\r\n        }\r\n    }, [])\r\n    if(!isAuth){\r\n        return <Redirect to=\"/login\"/>\r\n    }\r\n    return (\r\n        <div style={{maxWidth: \"80%\", margin: \"auto\"}}>\r\n            <img src={user?.avatar} alt=\"\"/>\r\n            <p>{user?.email}</p>\r\n            <p>{user?._id}</p>\r\n            <p>{user?.name}</p>\r\n        </div>\r\n    )\r\n}","import {ActionTypes} from \"../constants/constants\";\r\nimport {InitialPacksStateType} from \"../reducers/packs/packs-reducer\";\r\nimport {CardPacks, ICardsPack, IResponsePacksType} from \"../../../server/api\";\r\nimport {AxiosResponse} from \"axios\";\r\n\r\n\r\nexport const getPacks = (cards: IResponsePacksType | undefined) => ({\r\n    type: ActionTypes.GET_PACKS, payload: {...cards}\r\n} as const)\r\n\r\nexport const setPacks = (cards: ICardsPack) => ({\r\n    type: ActionTypes.SET_PACKS, payload: {...cards}\r\n} as const)\r\n\r\nexport const deletePacks = (_id: string) => ({\r\n    type: ActionTypes.DELETE_PACKS, payload: {_id}\r\n} as const)\r\n\r\nexport const updatePacks = (_id: string, name: string) => ({\r\n    type: ActionTypes.UPDATE_PACKS, payload: {_id, name}\r\n} as const)\r\n\r\nexport const loadingPacks = (loading: boolean) => ({\r\n    type: ActionTypes.LOADING_PACKS, payload: {loading}\r\n} as const)","import {deletePacks, getPacks, loadingPacks, setPacks, updatePacks} from \"../../actions/packs-actions\";\r\n\r\nimport {ICardsPack, IResponsePacksType, packsAPI} from \"../../../../server/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {PacksActionsType} from \"../../reducers/packs/packs-reducer\";\r\n\r\n\r\nexport const getPacksTC = () => (dispatch: Dispatch<PacksActionsType>) => {\r\n    dispatch(loadingPacks(false))\r\n    return packsAPI.getCards()\r\n        .then((res: IResponsePacksType | undefined) => {\r\n            console.log(res)\r\n            dispatch(getPacks(res))\r\n            dispatch(loadingPacks(true))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(loadingPacks(false))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\nexport const setPacksTC = ({...packData}: ICardsPack) => (dispatch: Dispatch<PacksActionsType>) => {\r\n    dispatch(loadingPacks(false))\r\n    return packsAPI.setCard({...packData})\r\n        .then((cards) => {\r\n            console.log(cards)\r\n            dispatch(setPacks(cards))\r\n            dispatch(loadingPacks(true))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(loadingPacks(false))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\nexport const deletePacksTC = (_id: string) => (dispatch: Dispatch<PacksActionsType>) => {\r\n    dispatch(loadingPacks(false))\r\n    return packsAPI.deleteCards(_id)\r\n        .then(() => {\r\n            dispatch(deletePacks(_id))\r\n            dispatch(loadingPacks(true))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(loadingPacks(false))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\nexport const updatePacksTC = (_id: string, name: string) => (dispatch: Dispatch<PacksActionsType>) => {\r\n    dispatch(loadingPacks(false))\r\n    return packsAPI.updateCards(_id, name)\r\n        .then(() => {\r\n            dispatch(updatePacks(_id, name))\r\n            dispatch(loadingPacks(true))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(loadingPacks(false))\r\n            console.error(err)\r\n        })\r\n}","import React from 'react';\r\n\r\nconst Pagination = (props:any) => {\r\n    console.log(\">>>>>>>>>>>>>>>\")\r\n    console.log(props.cardsPack)\r\n    return (\r\n        <div>\r\n            <div\r\n                className=\"px-5 py-5 bg-white border-t flex flex-col xs:flex-row items-center xs:justify-between          \">\r\n                        <span className=\"text-xs xs:text-sm text-gray-900\">\r\n                            Showing {props.cardsPack.page} to {props.cardsPack.pageCount} of {props.cardsPack.cardPacksTotalCount} Entries\r\n                        </span>\r\n                <div className=\"inline-flex mt-2 xs:mt-0\">\r\n                    <button\r\n                        className=\"text-sm bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 rounded-l\">\r\n                        Prev\r\n                    </button>\r\n                    <button\r\n                        className=\"text-sm bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 rounded-r\">\r\n                        Next\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/store/store\";\r\nimport {deletePacksTC, getPacksTC, setPacksTC, updatePacksTC} from \"../../redux/thunk/packs/packs-thunk\";\r\nimport {PacksActionsType} from \"../../redux/reducers/packs/packs-reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ICardsPack} from \"../../../server/api\";\r\nimport { Link } from 'react-router-dom';\r\nimport {PATH} from \"../../components/Nav/Navigation\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\n\r\ninterface ICardsPackType {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string\r\n    cardsCount: number\r\n    grade: number\r\n    shots: number\r\n    rating: number\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n}\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string) => void\r\n}\r\n\r\n\r\nconst Packs = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    let addPackResolver: () => (dispatch: Dispatch<PacksActionsType>) => Promise<void> = () => dispatch(setPacksTC(cardsPackData));\r\n    let cardsPack = useSelector<RootStateType, any>((state) => {\r\n        return state.packs.cardPacks\r\n    })\r\n\r\n    let packs = useSelector<RootStateType, any>((state) => {\r\n        return state.packs\r\n    })\r\n    const cardsPackData: any = {\r\n        cardsPack: {\r\n            name: \"no Name\", // если не отправить будет таким\r\n            path: \"/def\", // если не отправить будет такой\r\n            grade: 0,// не обязателен\r\n            shots: 0,// не обязателен\r\n            rating: 0,// не обязателен\r\n            deckCover: \"url\",// не обязателен\r\n            private: false, // если не отправить будет такой\r\n            type: \"pack\",// если не отправить будет таким\r\n        }\r\n    }\r\n\r\n    const [open, setOpen] = useState<boolean>(false)\r\n\r\n    let [onc, seOnc] = useState<string>(\"\")\r\n    let [cardId, setId] = useState<string>(\"\")\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"mt-4 flex flex-col\">\r\n            <div className=\"-my-1  sm:-mx-5 lg:-mx-5\">\r\n                <label className=\"inline-flex items-center mt-3\">\r\n                    <input type=\"checkbox\" className=\"form-checkbox h-5 w-5 text-gray-600\"/><span\r\n                    className=\"ml-2 text-gray-700\">My Packs</span>\r\n                </label>\r\n                <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n                    <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n                        <table className=\"min-w-full divide-y divide-gray-200\">\r\n                            <thead className=\"bg-gray-50\">\r\n                            <tr>\r\n                                <th\r\n                                    scope=\"col\"\r\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                >\r\n                                    Pack Id\r\n                                </th>\r\n                                <th\r\n                                    scope=\"col\"\r\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                >\r\n                                    Name\r\n                                </th>\r\n\r\n\r\n                                <th\r\n                                    scope=\"col\"\r\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                >\r\n                                    Created\r\n                                </th>\r\n                                <th\r\n                                    scope=\"col\"\r\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                >\r\n                                    Rating\r\n                                </th>\r\n                                <th\r\n                                    scope=\"col\"\r\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                >\r\n                                    Cards Count\r\n                                </th>\r\n                                <th\r\n                                    scope=\"col\"\r\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                >\r\n                                    Shots\r\n                                </th>\r\n\r\n                                <th\r\n                                    scope=\"col\"\r\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                >\r\n                                    Grade\r\n                                </th>\r\n\r\n                                <th\r\n                                    scope=\"col\"\r\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                >\r\n                                    Path\r\n                                </th>\r\n                                <th\r\n                                    scope=\"col\"\r\n                                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                                >\r\n                                    <button\r\n                                        onClick={addPackResolver}\r\n                                        type=\"button\"\r\n                                        className=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                    >\r\n\r\n                                        Add pack\r\n                                    </button>\r\n                                </th>\r\n                                <th scope=\"col\" className=\"relative px-6 py-3\">\r\n                                    <span className=\"sr-only\">Edit</span>\r\n                                </th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                            {cardsPack?.map((cards: ICardsPackType) => {\r\n                                const deletePackResolver: () => (dispatch: Dispatch<PacksActionsType>) => Promise<void> = () => dispatch(deletePacksTC(cards._id));\r\n\r\n                                return (\r\n                                    <tr>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards._id}</td>\r\n                                        {cardId === cards._id && open ?\r\n                                            <input type=\"text\"\r\n                                                   onBlur={() => {\r\n                                                       console.log(cards._id)\r\n                                                       setId(cards._id)\r\n                                                       setOpen(false)\r\n                                                   }}\r\n                                                   autoFocus\r\n                                                   onChange={(e) => seOnc(e.currentTarget.value)}\r\n                                                   placeholder=\"Custom focus style\"\r\n                                                   className=\"mt-5 focus:outline-none focus:ring focus:border-blue-300 rounded-sm border-indigo-900\"\r\n                                            />\r\n                                            :\r\n                                            <td onDoubleClick={() => {\r\n                                                setId(cards._id)\r\n                                                setOpen(true)\r\n                                            }}\r\n                                                className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{cards.name}</td>\r\n\r\n                                        }\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.created}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.rating}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.cardsCount}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.shots}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.grade}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.path}</td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                                            <button\r\n                                                onClick={deletePackResolver}\r\n                                                type=\"button\"\r\n                                                className=\"inline-flex mr-2 items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                            >\r\n                                                Delete\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => dispatch(updatePacksTC(cards._id, onc))}\r\n                                                type=\"button\"\r\n                                                className=\"inline-flex mr-2 items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                            >\r\n                                                Update\r\n                                            </button>\r\n                                            <Link to={`${PATH.CARDS}${cards._id}`}>\r\n                                                Cards\r\n                                            </Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Pagination cardsPack={packs}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Packs;","import {CardsAPI, CardsType} from \"../../../../server/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setCards} from \"../../actions/cards-actions\";\r\nimport {ActionsType} from \"../../reducers/cards/cards-reducer\";\r\nimport {RootStateType} from \"../../store/store\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\n\r\nexport const getCardsTC = (_id: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    return CardsAPI.getCards(_id)\r\n        .then((res) => {\r\n            dispatch(setCards(res.data.cards))\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const createCardsTC = (newCards: CardsType) => (dispatch: ThunkDispatch<RootStateType, unknown, ActionsType>) => {\r\n    return CardsAPI.createCards(newCards)\r\n        .then((res) => {\r\n            console.log(res)\r\n            dispatch(getCardsTC(newCards.cardsPack_id))\r\n        })\r\n        .catch((err) => {\r\n            alert(err)\r\n        })\r\n}\r\n\r\nexport const deleteCardsTC = (cardsPack_id: string) => (dispatch: ThunkDispatch<RootStateType, unknown, ActionsType>) => {\r\n    return CardsAPI.deleteCards(cardsPack_id)\r\n        .then((res) => {\r\n            dispatch(getCardsTC(res.data.deletedCard.cardsPack_id))\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const updateCardsTC = (cards: CardsType) => (dispatch: ThunkDispatch<RootStateType, unknown, ActionsType>) => {\r\n    return CardsAPI.updateCards(cards)\r\n        .then((res) => {\r\n            dispatch(getCardsTC(res.data.card.cardsPack_id))\r\n        })\r\n        .catch((err) => {\r\n            console.error(err)\r\n        })\r\n}","import {ActionTypes} from \"../constants/constants\";\r\nimport {CardsType} from \"../../../server/api\";\r\n\r\n\r\nexport const setCards = (cards: CardsType[]) => ({\r\n    type: ActionTypes.SET_CARDS, payload: {cards}\r\n} as const)\r\n\r\nexport const createCards = (newCards: CardsType) => ({\r\n    type: ActionTypes.ADD_CARDS, payload: {newCards}\r\n} as const)\r\n\r\n\r\nexport const setFilteredCards = (filteredCards:FilteredCardsType ) => ({\r\n    type: ActionTypes.SET_FILTERED_CARDS, payload: {filteredCards}\r\n} as const)\r\n\r\nexport const setCardsGrade = (_id: string,grade:number) => ({\r\n    type: ActionTypes.SET_CARDS_GRADE, payload: {_id,grade}\r\n} as const)\r\n\r\nexport type FilteredCardsType = {\r\n    minGrade: number\r\n    maxGrade: number\r\n    packName: string\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {RootStateType, useTypedSelector} from \"../../redux/store/store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {CardsType} from \"../../../server/api\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {PATH} from \"../../components/Nav/Navigation\";\r\nimport {Dispatch} from \"redux\";\r\nimport {PacksActionsType} from \"../../redux/reducers/packs/packs-reducer\";\r\nimport {getPacksTC, setPacksTC} from \"../../redux/thunk/packs/packs-thunk\";\r\nimport {createCardsTC, deleteCardsTC, getCardsTC, updateCardsTC} from \"../../redux/thunk/cards/cards-thunk\";\r\n\r\nexport const Cards = () => {\r\n    const {_id}:{_id: string} = useParams();\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    const cards: CardsType[] = useTypedSelector(state => state.cards.cards)\r\n    const isAuth: boolean = useTypedSelector(state => state.login.isAuth)\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [newQuestion, setNewQuestion] = useState<string>(\"\")\r\n    const [newAnswer, setAnswer] = useState<string>(\"\")\r\n\r\n    /*\r\n    * {\"newCardsPack\":{\"_id\":\"609931cce00ab80004f46983\",\"user_id\":\"5eecf82a3ed8f700042f1186\",\"user_name\":\"Ignat\",\"private\":false,\"name\":\"no Name\",\"path\":\"/def\",\"grade\":0,\"shots\":0,\"cardsCount\":0,\"type\":\"card\",\"rating\":0,\"created\":\"2021-05-10T13:14:52.121Z\",\"updated\":\"2021-05-10T13:14:52.121Z\",\"more_id\":\"5eecf82a3ed8f700042f1186\",\"__v\":0},\"token\":\"b46b7e90-b191-11eb-a9c6-e598fed4fb3d\",\"tokenDeathTime\":1620663292025}\r\n    *\r\n    * */\r\n    console.log(cards)\r\n    const cardsPackData: any = {\r\n        card: {\r\n            cardsPack_id: \"609944dfe00ab80004f46989\",\r\n            question: \"Why???\", // если не отправить будет таким\r\n            answer: \"no answer\", // если не отправить будет таким\r\n            grade: 0, // 0..5, не обязателен\r\n            shots: 0, // не обязателен\r\n            rating: 0, // не обязателен\r\n            answerImg: \"base 64\", // не обязателен\r\n            questionImg: \"base 64\", // не обязателен\r\n            questionVideo: \"base 64\", // не обязателен\r\n            answerVideo: \"base 64\", // не обязателен\r\n            type: \"card\", // если не отправить будет таким\r\n        }\r\n    }\r\n\r\n\r\n    let addPackResolver: () => (dispatch: Dispatch<PacksActionsType>) => Promise<void> = () => dispatch(createCardsTC(cardsPackData));\r\n    useEffect(() => {\r\n        console.log(\"GET CARDS\")\r\n        dispatch(getCardsTC(_id));\r\n    }, [dispatch, _id]);\r\n\r\n    // if(isAuth){\r\n    //     return <Redirect to={PATH.LOGIN}/>\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"inline-flex items-center mt-3\">\r\n                <span className=\"ml-2 text-gray-700\">Cards</span>\r\n            </label>\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                    <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                        Question\r\n                    </th>\r\n                    <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                        Answer\r\n                    </th>\r\n                    <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                        Grade\r\n                    </th>\r\n                    <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                        Updated\r\n                    </th>\r\n                    <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                        Url\r\n                    </th>\r\n                    <th\r\n                        scope=\"col\"\r\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                        <button\r\n                            onClick={addPackResolver}\r\n                            type=\"button\"\r\n                            className=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                        >\r\n                            ADD\r\n                        </button>\r\n                    </th>\r\n                </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {cards?.map((cards) => {\r\n                    const updatedQuestion: any = {\r\n                        cardsPack_id: \"609944dfe00ab80004f46989\",\r\n                        _id: cards._id,\r\n                        question: \"nopenopenope\", // если не отправить будет таким\r\n                        answer: \"no answer\", // если не отправить будет таким\r\n                        grade: 0, // 0..5, не обязателен\r\n                        shots: 0, // не обязателен\r\n                        rating: 0, // не обязателен\r\n                        answerImg: \"base 64\", // не обязателен\r\n                        questionImg: \"base 64\", // не обязателен\r\n                        questionVideo: \"base 64\", // не обязателен\r\n                        answerVideo: \"base 64\", // не обязателен\r\n                        type: \"card\", // если не отправить будет таким\r\n                    }\r\n                    return (\r\n                        <tr>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.question}</td>\r\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{cards.answer}</td>\r\n\r\n\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.grade}</td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{cards.updated}</td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{\"some img\"}</td>\r\n\r\n\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                                <button\r\n                                    onClick={() => {\r\n                                      return dispatch(deleteCardsTC(cards._id))\r\n                                    }}\r\n                                    type=\"button\"\r\n                                    className=\"inline-flex mr-2 items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => {\r\n                                        return dispatch(updateCardsTC(updatedQuestion))\r\n                                    }}\r\n                                    type=\"button\"\r\n                                    className=\"inline-flex mr-2 items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                >\r\n                                    Update\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>)\r\n}","import React from 'react';\r\nimport {BrowserRouter, HashRouter, Route, Switch} from 'react-router-dom';\r\nimport {Login} from '../screens/Login/Login';\r\nimport Registration from '../screens/Registration/Registration';\r\nimport {Navigation, PATH} from \"../components/Nav/Navigation\";\r\nimport {ResetPassword} from \"../screens/ResetPassword/ResetPassword\";\r\nimport {ForgotPassword} from \"../screens/ForgotPassword/ForgotPassoword\";\r\n\r\nimport {HomePage} from \"../screens/HomePage/HomePage\";\r\nimport Packs from \"../screens/Packs/Packs\";\r\nimport {Cards} from \"../screens/Cards/Cards\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../redux/store/store\";\r\n\r\nexport default function Routing() {\r\n    const isAuth = useSelector((state:RootStateType) => state.login.isAuth)\r\n\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <div className=\"app-wrapper-content\">\r\n\r\n                <HashRouter>\r\n                    <Navigation/>\r\n                    <Switch>\r\n                        <Route exact\r\n                               component={Login}\r\n                               path={PATH.LOGIN}/>\r\n                        <Route exact\r\n                               component={HomePage}\r\n                               path={PATH.HOME}/>\r\n                        <Route exact\r\n                               component={Registration}\r\n                               path={PATH.REGISTER}/>\r\n                        <Route\r\n                            exact\r\n                            path={PATH.FORGOT}\r\n                            component={ForgotPassword}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={PATH.PACKS}\r\n                            component={Packs}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/cards/:_id\"}\r\n                            component={Cards}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/set-new-password/:token\"\r\n                            component={ResetPassword}\r\n                        />\r\n                    </Switch>\r\n                </HashRouter>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Routing from './ui/routing/Routing';\r\nimport './index.css';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from \"./ui/redux/store/store\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <Routing/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}